var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ElasticAggregation.html",[0,0.121,1,1.411]],["body/interfaces/ElasticAggregation.html",[0,0.195,1,2.273,2,0.541,3,0.475,4,0.413,5,0.354,6,1.195,7,1.337,8,0.475,9,2.346,10,1.973,11,2.346,12,2.072,13,2.346,14,2.679,15,2.384,16,0.413,17,1.187,18,1.062,19,2.893,20,2.893,21,2.893,22,2.273,23,0.65,24,0.044,25,1.423,26,0.896,27,2.131,28,1.702,29,1.702,30,0.688,31,1.702,32,2.346,33,1.702,34,1.702,35,1.702,36,2.77,37,0.475,38,1.702,39,1.702,40,1.702,41,1.702,42,0.688,43,1.843,44,1.702,45,1.476,46,0.874,47,2.346,48,2.679,49,2.77,50,0.771,51,1.503,52,1.227,53,1.702,54,1.702,55,1.702,56,1.702,57,1.503,58,1.702,59,1.702,60,1.702,61,1.702,62,0.861,63,1.04,64,1.702,65,1.503,66,1.702,67,1.702,68,0.919,69,2.072,70,2.37,71,1.337,72,0.688,73,2.37,74,0.735,75,2.273,76,2.37,77,2.37,78,1.503,79,1.503,80,0.771,81,1.702,82,1.702,83,2.346,84,1.702,85,1.503,86,1.503,87,0.688,88,1.503,89,1.702,90,1.195,91,0.745,92,1.503,93,1.702,94,0.02,95,0.028,96,0.02]],["title/interfaces/ElasticBucket.html",[0,0.121,22,1.411]],["body/interfaces/ElasticBucket.html",[0,0.195,1,2.273,2,0.541,3,0.475,4,0.413,5,0.354,6,1.195,7,1.337,8,0.475,9,1.702,10,1.909,11,1.702,12,1.503,13,1.702,14,2.554,15,2.273,16,0.413,17,1.187,18,1.062,19,1.702,20,1.702,21,1.702,22,2.109,23,0.65,24,0.044,25,1.423,26,0.896,27,2.131,28,1.702,29,1.702,30,0.688,31,1.702,32,2.346,33,1.702,34,1.702,35,1.702,36,2.77,37,0.475,38,1.702,39,1.702,40,1.702,41,1.702,42,0.688,43,1.843,44,1.702,45,1.909,46,0.938,47,2.346,48,2.679,49,2.77,50,0.771,51,1.503,52,1.227,53,1.702,54,1.702,55,1.702,56,1.702,57,1.503,58,1.702,59,1.702,60,1.702,61,2.346,62,1.187,63,1.04,64,1.702,65,1.503,66,2.893,67,2.893,68,0.919,69,2.072,70,2.37,71,1.337,72,0.688,73,2.37,74,0.735,75,2.273,76,2.37,77,2.37,78,1.503,79,1.503,80,0.771,81,1.702,82,1.702,83,2.346,84,1.702,85,1.503,86,1.503,87,0.688,88,1.503,89,1.702,90,1.195,91,0.745,92,1.503,93,1.702,94,0.02,95,0.028,96,0.02]],["title/interfaces/ElasticHit.html",[0,0.121,43,1.411]],["body/interfaces/ElasticHit.html",[0,0.193,1,2.071,2,0.523,3,0.459,4,0.399,5,0.342,6,1.155,7,1.293,8,0.459,9,1.646,10,1.953,11,1.646,12,1.453,13,1.646,14,2.518,15,2.24,16,0.399,17,1.159,18,1.291,19,1.646,20,1.646,21,1.646,22,1.8,23,0.752,24,0.044,25,1.417,26,0.888,27,2.105,28,1.646,29,1.646,30,0.665,31,1.646,32,2.292,33,1.646,34,1.646,35,1.646,36,2.741,37,0.459,38,1.646,39,1.646,40,1.646,41,1.646,42,0.665,43,2.071,44,1.646,45,1.442,46,0.949,47,2.637,48,2.741,49,2.95,50,1.038,51,2.024,52,1.313,53,2.851,54,2.851,55,2.851,56,2.851,57,2.518,58,1.646,59,1.646,60,1.646,61,1.646,62,0.833,63,1.025,64,1.646,65,1.453,66,1.646,67,1.646,68,0.906,69,2.024,70,2.328,71,1.293,72,0.665,73,2.328,74,0.726,75,2.24,76,2.328,77,2.328,78,1.453,79,1.453,80,0.745,81,1.646,82,1.646,83,2.292,84,1.646,85,1.453,86,1.453,87,0.665,88,1.453,89,1.646,90,1.155,91,0.728,92,1.453,93,1.646,94,0.019,95,0.027,96,0.019]],["title/interfaces/ElasticQuery.html",[0,0.121,97,1.796]],["body/interfaces/ElasticQuery.html",[0,0.171,2,0.605,3,0.531,4,0.462,5,0.396,6,1.337,8,0.531,10,1.198,16,0.462,17,1.281,18,1.556,23,0.85,24,0.044,25,1.358,26,0.845,30,1.149,45,1.198,46,0.845,57,2.675,63,0.685,65,2.785,68,0.605,74,0.462,94,0.022,95,0.03,96,0.022,97,3.03,98,2.184,99,3.399,100,0.863,101,0.964,102,3.125,103,2.558,104,3.125,105,2.558,106,2.558,107,1.83,108,3.125,109,3.125,110,3.125,111,5.175,112,4.235,113,4.971,114,3.243,115,4.153,116,1.777,117,4.153,118,3.125,119,3.125,120,2.184,121,4.153,122,4.153,123,4.153,124,4.153,125,3.125,126,3.125,127,3.125,128,3.125,129,3.125,130,3.125,131,3.125,132,3.125,133,3.125,134,3.125,135,3.125,136,3.125,137,3.125,138,3.125,139,2.558,140,2.558,141,2.558,142,2.184]],["title/interfaces/ElasticSearchResponse.html",[0,0.121,27,1.261]],["body/interfaces/ElasticSearchResponse.html",[0,0.193,1,2.073,2,0.524,3,0.459,4,0.399,5,0.343,6,1.157,7,1.295,8,0.459,9,1.648,10,1.954,11,1.648,12,2.026,13,1.648,14,2.519,15,2.241,16,0.399,17,1.161,19,1.648,20,1.648,21,1.648,22,1.802,23,0.818,24,0.044,25,1.404,26,0.888,27,2.18,28,2.853,29,2.853,30,1.067,31,2.853,32,2.294,33,1.648,34,1.648,35,1.648,36,2.951,37,0.459,38,1.648,39,1.648,40,1.648,41,1.648,42,0.666,43,1.802,44,2.853,45,1.443,46,0.866,47,2.294,48,2.742,49,2.813,50,0.746,51,2.026,52,1.255,53,1.648,54,1.648,55,1.648,56,1.648,57,1.455,58,1.648,59,1.648,60,1.648,61,1.648,62,0.834,63,1.025,64,1.648,65,1.455,66,1.648,67,1.648,68,0.906,69,2.026,70,2.33,71,1.295,72,0.666,73,2.33,74,0.727,75,2.241,76,2.33,77,2.33,78,1.455,79,1.455,80,0.746,81,1.648,82,1.648,83,2.294,84,1.648,85,1.455,86,1.455,87,0.666,88,1.455,89,1.648,90,1.157,91,0.729,92,1.455,93,1.648,94,0.019,95,0.027,96,0.019,105,2.213,106,2.213,114,3.105,143,2.704,144,2.704]],["title/interfaces/GetSelectOptionsParams.html",[0,0.121,145,1.13]],["body/interfaces/GetSelectOptionsParams.html",[0,0.197,2,0.39,3,0.343,4,0.298,5,0.256,16,0.298,17,0.938,18,1.126,23,0.602,24,0.044,25,0.75,26,0.885,30,0.75,37,0.836,42,0.497,46,0.693,50,0.557,52,1.134,62,0.622,63,1.008,68,1.009,72,1.079,74,0.647,80,0.84,87,0.902,91,0.709,94,0.014,95,0.022,96,0.014,100,0.557,101,0.622,107,1.403,116,0.863,145,1.564,146,0.694,147,0.694,148,2.096,149,1.506,150,1.606,151,1.403,152,0.966,153,1.832,154,0.694,155,0.966,156,0.966,157,0.966,158,1.457,159,0.966,160,0.75,161,0.84,162,0.773,163,0.863,164,0.966,165,0.966,166,1.506,167,0.966,168,1.302,169,0.966,170,1.457,171,1.97,172,0.966,173,0.966,174,0.863,175,0.966,176,1.754,177,0.966,178,0.966,179,0.966,180,1.721,181,0.966,182,1.302,183,0.773,184,1.35,185,0.966,186,0.863,187,1.568,188,0.966,189,1.754,190,1.457,191,1.302,192,1.457,193,0.966,194,0.966,195,0.694,196,0.966,197,1.457,198,0.966,199,0.863,200,0.966,201,0.966,202,0.773,203,0.773,204,0.863,205,0.863,206,0.863,207,0.966,208,0.863,209,0.863,210,0.773,211,1.302,212,0.863,213,1.583,214,0.966,215,0.966,216,0.966,217,0.966,218,0.966,219,0.966,220,0.966,221,0.966,222,0.966,223,0.966,224,0.966,225,0.966,226,0.966,227,0.966,228,1.832,229,0.966,230,1.457,231,1.754,232,1.731,233,0.694,234,1.457,235,0.694,236,1.457,237,0.773,238,1.457,239,0.966,240,0.622,241,0.966,242,0.966,243,0.966,244,0.966,245,0.622,246,0.773,247,0.966,248,0.966,249,0.966,250,1.405,251,0.966,252,0.966,253,0.966,254,0.966,255,0.966,256,1.457,257,0.966,258,1.457,259,1.457,260,0.966,261,1.457,262,0.966,263,0.966,264,0.966,265,0.966,266,0.966,267,0.966,268,0.694,269,1.754,270,0.863,271,0.966,272,1.873,273,0.966,274,0.773,275,0.863,276,1.457,277,0.966,278,0.966,279,0.966,280,0.863,281,1.457,282,1.953,283,0.938,284,0.966,285,0.966,286,0.966,287,0.966,288,0.863,289,1.302]],["title/interfaces/LangString.html",[0,0.121,160,0.726]],["body/interfaces/LangString.html",[0,0.168,2,0.591,3,0.519,4,0.451,5,0.387,8,0.519,10,1.568,24,0.043,26,0.783,37,0.783,45,1.568,46,0.975,63,0.896,68,0.893,74,0.451,75,2.208,90,1.973,91,0.591,94,0.022,95,0.029,96,0.022,101,0.942,149,1.961,150,1.422,151,1.407,160,1.33,161,0.843,183,1.171,184,1.746,195,1.586,202,1.568,213,1.694,233,1.05,237,1.171,240,1.422,250,1.171,268,1.407,283,1.422,290,2.493,291,1.861,292,3.347,293,4.203,294,2.858,295,3.347,296,3.347,297,3.347,298,3.347,299,3.347,300,3.774,301,3.347,302,2.858,303,3.347,304,3.347,305,3.347,306,3.442,307,2.134,308,1.462,309,3.054,310,1.861,311,1.861,312,1.861,313,2.499,314,2.499,315,3.222,316,2.134,317,3.222,318,2.858,319,2.134,320,2.134,321,2.134,322,2.134,323,2.134,324,2.134,325,2.134,326,3.222,327,2.134,328,2.134,329,1.861,330,3.347,331,2.499,332,3.347,333,2.499,334,2.499]],["title/interfaces/LangStringSimple.html",[0,0.121,161,0.814]],["body/interfaces/LangStringSimple.html",[0,0.171,2,0.607,3,0.533,4,0.463,5,0.398,8,0.533,10,1.202,24,0.043,26,0.794,37,0.794,45,1.202,46,0.973,63,0.912,68,0.905,74,0.463,75,2.237,90,2,91,0.607,94,0.023,95,0.03,96,0.023,101,0.967,149,1.969,150,1.441,151,1.432,160,1.339,161,1.149,183,1.596,184,1.739,195,1.432,202,1.202,213,1.712,233,1.078,237,1.596,240,1.284,250,1.596,268,1.078,283,1.441,290,2.537,291,1.911,292,2.567,293,4.074,294,2.191,295,2.567,296,2.567,297,2.567,298,2.567,299,2.567,300,3.407,301,2.567,302,2.191,303,2.567,304,2.567,305,2.567,306,3.266,307,2.191,308,1.501,310,1.911,311,1.911,312,2.537,313,3.407,314,3.407,315,3.266,316,2.191,317,3.266,318,2.909,319,2.191,320,2.191,321,2.191,322,2.191,323,2.191,324,2.191,325,2.191,326,3.266,327,2.191,328,2.191,329,1.911,330,3.407,331,2.567,332,3.407,333,2.567,334,2.567,335,3.136]],["title/interfaces/Pagination.html",[0,0.121,336,2.06]],["body/interfaces/Pagination.html",[0,0.2,2,0.774,3,0.679,4,0.59,5,0.507,8,0.679,16,0.773,17,1.497,23,0.773,24,0.043,25,1.414,26,0.679,91,0.94,94,0.029,95,0.035,96,0.029,100,1.103,107,1.374,112,4.641,163,1.71,274,1.532,336,3.803,337,3.27,338,3.27,339,3.996,340,3.996,341,2.793,342,3.996,343,3.996,344,3.996,345,3.996,346,3.27,347,3.996,348,5.577,349,4.857,350,4.857]],["title/interfaces/SelectOption.html",[0,0.121,180,0.909]],["body/interfaces/SelectOption.html",[0,0.192,2,0.364,3,0.32,4,0.278,5,0.239,8,0.32,16,0.278,17,0.89,18,1.087,23,0.729,24,0.044,25,0.711,26,0.871,30,0.97,37,0.883,42,0.464,46,0.669,50,0.797,52,1.186,62,0.58,63,0.981,68,0.992,72,1.104,74,0.627,80,1.237,87,0.865,91,0.68,94,0.014,95,0.021,96,0.014,100,0.52,101,0.58,107,1.354,114,1.76,116,0.806,145,1.346,146,0.647,147,0.647,148,1.382,149,0.993,150,1.438,151,1.354,152,0.901,153,1.789,154,0.647,155,0.901,156,0.901,157,0.901,158,1.382,159,0.901,160,0.711,161,0.797,162,0.722,163,1.235,164,1.382,165,1.382,166,1.604,167,1.382,168,1.503,169,1.382,170,1.885,171,2.06,172,1.382,173,1.382,174,1.235,175,1.382,176,1.885,177,1.382,178,1.382,179,1.382,180,1.721,181,1.382,182,1.685,183,1.107,184,1.522,185,1.382,186,1.235,187,1.817,188,1.382,189,1.885,190,2.145,191,1.503,192,1.681,193,1.382,194,1.382,195,0.993,196,1.382,197,1.885,198,1.382,199,1.235,200,1.382,201,1.382,202,1.107,203,0.722,204,0.806,205,0.806,206,0.806,207,0.901,208,0.806,209,0.806,210,0.722,211,1.235,212,0.806,213,1.541,214,0.901,215,0.901,216,0.901,217,0.901,218,0.901,219,0.901,220,0.901,221,0.901,222,0.901,223,0.901,224,0.901,225,0.901,226,0.901,227,0.901,228,1.789,229,0.901,230,1.382,231,1.681,232,1.697,233,0.647,234,1.382,235,0.647,236,1.382,237,0.722,238,1.382,239,0.901,240,0.58,241,0.901,242,0.901,243,0.901,244,0.901,245,0.58,246,0.722,247,0.901,248,0.901,249,0.901,250,1.346,251,0.901,252,0.901,253,0.901,254,0.901,255,0.901,256,1.382,257,0.901,258,1.382,259,1.382,260,0.901,261,1.382,262,0.901,263,0.901,264,0.901,265,0.901,266,0.901,267,0.901,268,0.647,269,1.681,270,0.806,271,0.901,272,1.817,273,0.901,274,0.722,275,0.806,276,1.382,277,0.901,278,0.901,279,0.901,280,0.806,281,1.382,282,1.885,283,0.89,284,0.901,285,0.901,286,0.901,287,0.901,288,0.806,289,1.235]],["title/interfaces/SelectOptionCounts.html",[0,0.121,203,1.13]],["body/interfaces/SelectOptionCounts.html",[0,0.203,2,0.393,3,0.345,4,0.3,5,0.257,8,0.345,23,0.452,24,0.044,25,0.906,26,0.887,30,0.753,37,0.857,42,0.5,46,0.746,50,0.56,52,1.137,62,0.626,63,1.011,68,1.01,72,1.082,74,0.648,80,0.844,87,0.906,91,0.712,94,0.015,95,0.022,96,0.015,100,0.844,101,0.626,107,1.408,116,0.869,145,1.41,146,1.051,147,0.698,148,1.761,149,1.051,150,1.476,151,1.408,152,0.972,153,1.836,154,0.698,155,0.972,156,0.972,157,0.972,158,1.464,159,0.972,160,0.753,161,0.844,162,0.778,163,0.869,164,0.972,165,0.972,166,1.587,167,0.972,168,1.308,169,0.972,170,1.464,171,1.974,172,0.972,173,0.972,174,0.869,175,0.972,176,1.96,177,0.972,178,0.972,179,0.972,180,1.731,181,0.972,182,1.308,183,0.778,184,1.354,185,0.972,186,0.869,187,1.574,188,0.972,189,1.761,190,1.464,191,1.308,192,1.761,193,0.972,194,0.972,195,0.698,196,0.972,197,1.464,198,0.972,199,0.869,200,0.972,201,0.972,202,0.778,203,1.172,204,0.869,205,0.869,206,0.869,207,0.972,208,0.869,209,0.869,210,0.778,211,1.308,212,0.869,213,1.587,214,0.972,215,0.972,216,0.972,217,0.972,218,0.972,219,0.972,220,0.972,221,0.972,222,0.972,223,0.972,224,0.972,225,0.972,226,0.972,227,0.972,228,1.836,229,0.972,230,1.464,231,1.761,232,1.734,233,0.698,234,1.464,235,0.698,236,1.464,237,0.778,238,1.464,239,0.972,240,0.626,241,0.972,242,0.972,243,0.972,244,0.972,245,0.626,246,0.778,247,0.972,248,0.972,249,0.972,250,1.41,251,0.972,252,0.972,253,0.972,254,0.972,255,0.972,256,1.464,257,0.972,258,1.464,259,1.464,260,0.972,261,1.464,262,0.972,263,0.972,264,0.972,265,0.972,266,0.972,267,0.972,268,0.698,269,1.761,270,0.869,271,0.972,272,1.879,273,0.972,274,0.778,275,0.869,276,1.464,277,0.972,278,0.972,279,0.972,280,0.869,281,1.464,282,1.96,283,0.943,284,0.972,285,0.972,286,0.972,287,0.972,288,0.869,289,1.308,307,1.419,308,0.972,351,2.03]],["title/interfaces/SelectOptionGroup.html",[0,0.121,232,1.014]],["body/interfaces/SelectOptionGroup.html",[0,0.196,2,0.385,3,0.338,4,0.294,5,0.252,8,0.338,16,0.294,17,0.928,18,0.831,23,0.598,24,0.044,25,0.742,26,0.882,30,0.742,37,0.832,42,0.49,46,0.688,50,0.549,52,1.128,62,0.928,63,1.003,68,1.005,72,1.072,74,0.643,80,0.831,87,0.895,91,0.703,94,0.014,95,0.022,96,0.014,100,0.549,101,0.613,107,1.393,116,0.851,145,1.393,146,0.684,147,0.684,148,1.441,149,1.035,150,1.466,151,1.393,152,0.952,153,1.823,154,0.684,155,0.952,156,0.952,157,0.952,158,1.441,159,0.952,160,0.742,161,0.831,162,0.763,163,0.851,164,0.952,165,0.952,166,1.497,167,0.952,168,1.288,169,0.952,170,1.441,171,1.959,172,0.952,173,0.952,174,0.851,175,0.952,176,1.739,177,0.952,178,0.952,179,0.952,180,1.741,181,0.952,182,1.288,183,0.763,184,1.546,185,0.952,186,0.851,187,1.862,188,0.952,189,1.739,190,1.441,191,1.554,192,1.441,193,0.952,194,0.952,195,0.684,196,0.952,197,1.441,198,0.952,199,0.851,200,0.952,201,0.952,202,0.763,203,0.763,204,0.851,205,0.851,206,0.851,207,0.952,208,0.851,209,0.851,210,0.763,211,1.288,212,0.851,213,1.574,214,0.952,215,0.952,216,0.952,217,0.952,218,0.952,219,0.952,220,0.952,221,0.952,222,0.952,223,0.952,224,0.952,225,0.952,226,0.952,227,0.952,228,1.823,229,0.952,230,1.441,231,1.739,232,1.757,233,0.684,234,1.441,235,0.684,236,1.441,237,0.763,238,1.441,239,0.952,240,0.613,241,0.952,242,0.952,243,0.952,244,0.952,245,0.613,246,0.763,247,0.952,248,0.952,249,0.952,250,1.393,251,0.952,252,0.952,253,0.952,254,0.952,255,0.952,256,1.441,257,0.952,258,1.441,259,1.441,260,0.952,261,1.441,262,0.952,263,0.952,264,0.952,265,0.952,266,0.952,267,0.952,268,1.035,269,2.192,270,1.288,271,1.441,272,2.187,273,1.441,274,1.154,275,0.851,276,1.441,277,0.952,278,0.952,279,0.952,280,0.851,281,1.441,282,1.939,283,0.928,284,0.952,285,0.952,286,0.952,287,0.952,288,0.851,289,1.288]],["title/interfaces/SelectOptionsProvider.html",[0,0.121,228,1.13]],["body/interfaces/SelectOptionsProvider.html",[0,0.198,2,0.364,3,0.32,4,0.278,5,0.239,8,0.32,16,0.278,18,0.969,23,0.627,24,0.044,25,0.711,26,0.871,30,0.711,37,0.894,42,0.464,46,0.669,50,0.52,52,1.241,62,0.58,63,0.981,68,1.019,72,1.186,74,0.627,80,0.797,87,1.046,91,0.68,94,0.014,95,0.021,96,0.014,100,0.52,101,0.58,107,1.541,116,0.806,145,1.628,146,1.354,147,0.647,148,1.382,149,0.993,150,1.522,151,1.354,152,0.901,153,1.931,154,0.647,155,0.901,156,0.901,157,0.901,158,1.382,159,0.901,160,0.711,161,0.797,162,0.722,163,0.806,164,0.901,165,0.901,166,1.46,167,0.901,168,1.235,169,0.901,170,1.382,171,1.918,172,0.901,173,0.901,174,0.806,175,0.901,176,1.885,177,0.901,178,0.901,179,0.901,180,1.736,181,0.901,182,1.235,183,0.722,184,1.309,185,0.901,186,0.806,187,1.503,188,0.901,189,1.885,190,1.382,191,1.235,192,1.382,193,0.901,194,0.901,195,0.647,196,0.901,197,1.382,198,0.901,199,0.806,200,0.901,201,0.901,202,0.722,203,0.722,204,0.806,205,0.806,206,0.806,207,0.901,208,0.806,209,0.806,210,0.722,211,1.503,212,0.806,213,1.541,214,0.901,215,0.901,216,0.901,217,0.901,218,0.901,219,0.901,220,0.901,221,0.901,222,0.901,223,0.901,224,1.382,225,1.382,226,1.382,227,1.382,228,1.846,229,1.382,230,1.681,231,2.033,232,1.697,233,0.993,234,1.681,235,1.46,236,1.681,237,1.107,238,1.681,239,0.901,240,0.58,241,0.901,242,0.901,243,0.901,244,0.901,245,0.58,246,0.722,247,0.901,248,0.901,249,0.901,250,1.346,251,0.901,252,0.901,253,0.901,254,0.901,255,0.901,256,1.382,257,0.901,258,1.382,259,1.382,260,0.901,261,1.382,262,0.901,263,0.901,264,0.901,265,0.901,266,0.901,267,0.901,268,0.647,269,1.681,270,0.806,271,0.901,272,1.817,273,0.901,274,0.722,275,0.806,276,1.382,277,0.901,278,0.901,279,0.901,280,0.806,281,1.382,282,1.885,283,0.89,284,0.901,285,0.901,286,0.901,287,0.901,288,0.806,289,1.235,308,1.681,352,2.017,353,2.363,354,2.363,355,2.363,356,1.882,357,2.14,358,2.14,359,1.882,360,1.882]],["title/classes/SelectOptionsProvidersMerger.html",[245,0.909,246,1.13]],["body/classes/SelectOptionsProvidersMerger.html",[0,0.192,3,0.32,4,0.278,5,0.239,8,0.32,16,0.278,18,1.087,23,0.662,24,0.044,25,0.711,26,0.871,30,0.711,37,0.856,42,0.464,46,0.669,50,0.52,52,1.241,62,0.58,63,0.981,68,0.992,72,1.046,74,0.627,80,0.797,87,0.865,91,0.68,94,0.014,95,0.021,96,0.014,100,0.52,101,0.89,107,1.46,116,0.806,145,1.628,146,1.46,147,0.647,148,1.382,149,0.993,150,1.522,151,1.354,152,0.901,153,1.931,154,0.647,155,0.901,156,0.901,157,0.901,158,1.382,159,0.901,160,0.711,161,0.797,162,0.722,163,0.806,164,0.901,165,0.901,166,1.46,167,0.901,168,1.235,169,0.901,170,1.382,171,1.918,172,0.901,173,0.901,174,0.806,175,0.901,176,1.681,177,0.901,178,0.901,179,0.901,180,1.703,181,0.901,182,1.235,183,0.722,184,1.309,185,0.901,186,0.806,187,1.503,188,0.901,189,1.681,190,1.382,191,1.235,192,1.382,193,0.901,194,0.901,195,0.647,196,0.901,197,1.382,198,0.901,199,0.806,200,0.901,201,0.901,202,0.722,203,0.722,204,0.806,205,0.806,206,0.806,207,0.901,208,0.806,209,0.806,210,0.722,211,1.235,212,0.806,213,1.541,214,0.901,215,0.901,216,0.901,217,0.901,218,0.901,219,0.901,220,0.901,221,0.901,222,0.901,223,0.901,224,0.901,225,0.901,226,0.901,227,0.901,228,2.04,229,0.901,230,1.681,231,2.033,232,1.697,233,0.647,234,1.681,235,1.354,236,1.382,237,0.722,238,1.681,239,1.382,240,0.89,241,1.382,242,1.382,243,1.382,244,0.901,245,0.58,246,1.107,247,1.382,248,0.901,249,1.382,250,1.718,251,0.901,252,0.901,253,0.901,254,0.901,255,0.901,256,1.382,257,0.901,258,1.382,259,1.382,260,0.901,261,1.382,262,0.901,263,0.901,264,0.901,265,0.901,266,0.901,267,0.901,268,0.647,269,1.681,270,0.806,271,0.901,272,1.817,273,0.901,274,0.722,275,0.806,276,1.382,277,0.901,278,0.901,279,0.901,280,0.806,281,1.382,282,1.885,283,0.89,284,0.901,285,0.901,286,0.901,287,0.901,288,0.806,289,1.235,308,1.885,352,2.017,353,2.363,354,2.363,355,2.363,357,2.4,358,2.4,361,1.315,362,1.882,363,1.882,364,1.882,365,1.882,366,1.882,367,1.882]],["title/classes/SubSink.html",[245,0.909,368,2.06]],["body/classes/SubSink.html",[3,0.573,4,0.498,5,0.428,8,0.573,12,2.351,15,2.091,16,0.498,18,0.931,23,0.498,24,0.043,26,0.573,37,0.573,94,0.024,95,0.031,96,0.024,151,1.16,154,1.665,166,1.502,182,1.444,235,1.502,240,1.347,245,1.493,270,1.869,308,2.091,352,3.052,357,2.057,358,2.057,361,2.358,368,3.052,369,3.963,370,2.762,371,4.367,372,4.367,373,5.753,374,4.367,375,4.367,376,5.121,377,4.367,378,5.121,379,3.374,380,4.367,381,4.367,382,5.304,383,4.367,384,4.367,385,5.121,386,3.963,387,3.374,388,3.374,389,4.367,390,4.367,391,4.367,392,5.121,393,4.367,394,4.367,395,4.367,396,4.367,397,4.367,398,4.367,399,3.374,400,3.374,401,3.374,402,3.374,403,3.374,404,3.374]],["title/changelog.html",[405,2.026,406,2.026,407,2.026]],["body/changelog.html",[5,0.581,24,0.038,71,2.196,94,0.033,95,0.038,96,0.033,407,3.753,408,3.753,409,4.586,410,4.586,411,4.586,412,4.586,413,4.586]],["title/coverage.html",[414,3.268]],["body/coverage.html",[0,0.233,1,1.325,5,0.351,6,2.329,7,2.519,22,1.325,23,0.409,24,0.043,27,1.185,43,1.325,74,0.868,94,0.02,95,0.027,96,0.02,97,1.687,98,2.673,142,1.934,145,1.061,146,1.914,147,1.914,160,0.682,161,0.764,162,1.061,180,0.854,203,1.061,228,1.061,232,0.952,245,1.18,246,1.061,290,2.672,291,2.882,310,1.687,329,1.687,336,1.934,337,2.266,368,1.934,369,2.266,370,2.266,414,2.266,415,2.768,416,2.768,417,2.768,418,2.672,419,2.266,420,5.936,421,5.886,422,1.934,423,2.768,424,2.266,425,1.934,426,1.934,427,2.266,428,3.825,429,3.825,430,3.825,431,3.825,432,2.768,433,2.768,434,2.266,435,2.266,436,2.266,437,2.673,438,2.266,439,1.934,440,3.825,441,2.768,442,2.768,443,4.728,444,2.768,445,2.768,446,2.768,447,2.266,448,4.384,449,2.266,450,2.266,451,2.266,452,2.266,453,2.768,454,2.266,455,2.266,456,2.266,457,2.266,458,2.266,459,2.266,460,2.266,461,2.266,462,2.266,463,2.266,464,2.266,465,2.266,466,2.266,467,2.266,468,2.266,469,2.266,470,2.266,471,2.266,472,2.266,473,2.266,474,2.266,475,2.768,476,2.768,477,2.768]],["title/dependencies.html",[478,2.476,479,2.895]],["body/dependencies.html",[24,0.041,94,0.033,95,0.038,96,0.033,154,1.566,479,4.293,480,4.552,481,4.552,482,4.552,483,4.552,484,4.552,485,4.552]],["title/miscellaneous/functions.html",[486,1.185,487,2.895]],["body/miscellaneous/functions.html",[4,0.281,6,1.244,7,1.894,8,0.764,10,1.354,14,1.901,15,1.691,16,0.429,17,0.586,18,1.542,23,0.281,24,0.043,27,0.813,30,0.468,36,1.565,37,0.672,42,0.716,45,1.115,46,0.82,48,1.901,49,1.901,51,1.022,52,1.05,68,0.563,69,2.129,70,1.901,71,0.91,72,1.108,73,1.901,74,0.429,76,1.901,77,1.901,78,1.022,79,1.022,80,0.524,85,1.022,86,1.022,87,1.05,88,1.022,90,1.693,91,0.766,92,1.022,94,0.014,95,0.021,96,0.014,97,1.772,98,2.032,100,0.524,101,0.586,107,1.214,120,1.328,139,1.555,140,1.555,141,1.555,142,2.468,146,0.653,147,1.547,149,1.609,150,0.586,153,1.635,154,1.214,160,0.716,162,1.115,166,1.547,168,0.813,171,1.693,174,1.511,180,1.089,184,1.488,186,0.813,191,0.813,195,0.653,204,0.813,205,0.813,206,0.813,208,0.813,209,0.813,210,0.728,211,0.813,212,0.813,213,0.653,232,0.653,233,0.653,235,1.946,240,0.586,272,1.244,274,1.115,275,0.813,280,0.813,283,1.315,288,0.813,289,1.693,290,1.158,291,2.411,306,2.032,310,1.772,311,1.772,312,1.772,315,2.468,316,1.328,317,2.468,318,2.032,319,1.328,320,1.328,321,2.032,322,2.032,323,1.328,324,1.328,325,1.328,326,2.765,327,1.328,328,1.328,329,2.152,341,1.328,346,1.555,357,3.406,358,3.406,386,1.555,418,1.158,419,2.379,422,2.032,425,1.328,426,2.032,427,2.379,434,2.379,435,2.379,436,2.379,437,1.328,438,2.379,439,1.328,447,2.379,449,2.379,450,2.379,451,2.379,452,2.379,454,1.555,455,2.379,456,2.89,457,1.555,458,2.379,459,2.379,460,1.555,461,2.379,462,2.379,463,1.555,464,2.89,465,2.379,466,1.555,467,2.379,468,2.379,469,1.555,470,2.379,471,2.379,472,1.555,473,2.379,474,2.379,486,0.91,487,1.555,488,2.032,489,3.956,490,1.555,491,1.9,492,1.9,493,1.9,494,1.9,495,3.68,496,1.9,497,2.379,498,1.555,499,1.9,500,1.9,501,1.9,502,3.956,503,3.238,504,3.238,505,1.9,506,3.238,507,1.9,508,1.9,509,1.9,510,1.9,511,1.9,512,1.9,513,1.9,514,1.9,515,1.9,516,2.907,517,1.9,518,1.9,519,1.9,520,1.9,521,1.9,522,2.907,523,1.9,524,2.907,525,1.9,526,1.9,527,1.9,528,1.9,529,1.9,530,1.9,531,1.9,532,1.9,533,1.9,534,1.9,535,1.9,536,1.9,537,1.9,538,1.9,539,1.9,540,1.9,541,1.9,542,1.9,543,2.907,544,1.9,545,1.9,546,2.907,547,1.9,548,1.9,549,1.9,550,1.9,551,1.9,552,1.9,553,1.555,554,1.9,555,1.9,556,1.9,557,2.907,558,3.531,559,1.9,560,1.9,561,1.9,562,1.9,563,1.9,564,1.9,565,1.9,566,1.9,567,1.9,568,1.9,569,1.9,570,2.907,571,1.9,572,1.9,573,1.9,574,1.9,575,1.9,576,1.9,577,1.9,578,1.9,579,1.9,580,1.9,581,1.9,582,1.9,583,1.9,584,1.9,585,1.9,586,1.9,587,1.9,588,1.9]],["title/index.html",[16,0.366,405,2.026,406,2.026]],["body/index.html",[24,0.037,94,0.032,95,0.037,96,0.032,199,1.929,408,3.689,589,5.217,590,5.217,591,5.217,592,4.508,593,5.217,594,5.217,595,4.508,596,4.508,597,4.508]],["title/modules.html",[598,3.268]],["body/modules.html",[24,0.038,94,0.034,95,0.038,96,0.034,598,3.828]],["title/overview.html",[599,3.268]],["body/overview.html",[2,0.897,24,0.038,94,0.033,95,0.038,96,0.033,361,3.236,599,3.79,600,4.631,601,4.631]],["title/miscellaneous/typealiases.html",[486,1.185,602,3.537]],["body/miscellaneous/typealiases.html",[16,0.534,23,0.847,24,0.042,42,1.125,46,0.85,50,0.998,52,1.295,72,1.125,74,0.674,87,0.891,94,0.026,95,0.033,96,0.026,100,0.998,114,2.204,120,2.527,146,1.244,147,1.57,150,1.408,153,1.918,160,1.125,161,1.26,166,1.244,180,1.115,184,1.115,187,1.954,210,1.387,235,1.244,268,1.244,283,1.408,294,2.527,302,2.527,311,2.783,312,2.204,338,2.96,341,2.527,418,2.204,425,2.527,426,3.19,437,2.527,439,2.527,486,1.732,488,2.527,490,2.96,495,2.96,497,2.96,498,2.96,503,4.301,504,2.96,506,3.736,553,2.96,603,3.616,604,4.565,605,3.616,606,4.565,607,4.565,608,4.565,609,3.616,610,4.565,611,3.616,612,3.616,613,3.616,614,3.616,615,3.616,616,3.616,617,3.616,618,3.616,619,3.616,620,3.616,621,3.616,622,5.003,623,3.616,624,3.616,625,3.616,626,3.616,627,3.616]],["title/miscellaneous/variables.html",[486,1.185,628,2.895]],["body/miscellaneous/variables.html",[16,0.663,24,0.039,37,0.762,94,0.032,95,0.037,96,0.032,99,3.672,100,1.436,103,4.257,418,2.734,422,3.84,424,4.257,486,2.148,488,3.135,628,3.672,629,4.486]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["07",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["0th",{"_index":321,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["1/1",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":601,"title":{},"body":{"overview.html":{}}}],["14",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":600,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["3.7.0",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["6.5.0",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":143,"title":{},"body":{"interfaces/ElasticSearchResponse.html":{}}}],["80",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["_first",{"_index":131,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["_id",{"_index":55,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["_index",{"_index":53,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["_last",{"_index":130,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["_score",{"_index":56,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["_search",{"_index":14,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["_shards",{"_index":31,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["_source",{"_index":49,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["_type",{"_index":54,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["absolute",{"_index":349,"title":{},"body":{"interfaces/Pagination.html":{}}}],["acc",{"_index":257,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["accessors",{"_index":377,"title":{},"body":{"classes/SubSink.html":{}}}],["add",{"_index":378,"title":{},"body":{"classes/SubSink.html":{}}}],["add(value",{"_index":400,"title":{},"body":{"classes/SubSink.html":{}}}],["added",{"_index":381,"title":{},"body":{"classes/SubSink.html":{}}}],["aggregate",{"_index":85,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["aggregation",{"_index":11,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["aggregationquery",{"_index":121,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["aggregations",{"_index":44,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["aggs",{"_index":111,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["aims",{"_index":104,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["aliases",{"_index":603,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allgroups",{"_index":281,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["allgroups.push(lastdynamicgroup",{"_index":285,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["allgroups.push(option",{"_index":287,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["alllabels",{"_index":216,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["alllabels.push(...labels",{"_index":221,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["alllabels.push(option.label",{"_index":219,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["alllabels.some(label",{"_index":222,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["alllangs",{"_index":330,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["alloptions",{"_index":276,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["alloptions.push(...option.options",{"_index":279,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["alloptions.push(option",{"_index":278,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["alloptions.reduce((acc",{"_index":255,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["already",{"_index":510,"title":{},"body":{"miscellaneous/functions.html":{}}}],["always",{"_index":59,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["anyobject",{"_index":604,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["applicable",{"_index":550,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applyting",{"_index":578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["argument",{"_index":553,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["array",{"_index":87,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["array::sort",{"_index":627,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["asc",{"_index":128,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["associated",{"_index":181,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["augmented",{"_index":164,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["autocomplete",{"_index":172,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["avg",{"_index":137,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["avoid",{"_index":395,"title":{},"body":{"classes/SubSink.html":{}}}],["awaitforcompletable",{"_index":424,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":568,"title":{},"body":{"miscellaneous/functions.html":{}}}],["b'].filter(notnil",{"_index":560,"title":{},"body":{"miscellaneous/functions.html":{}}}],["base",{"_index":548,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":347,"title":{},"body":{"interfaces/Pagination.html":{}}}],["basic",{"_index":140,"title":{},"body":{"interfaces/ElasticQuery.html":{},"miscellaneous/functions.html":{}}}],["basically",{"_index":554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["beging",{"_index":144,"title":{},"body":{"interfaces/ElasticSearchResponse.html":{}}}],["being",{"_index":50,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/typealiases.html":{}}}],["better",{"_index":342,"title":{},"body":{"interfaces/Pagination.html":{}}}],["beware",{"_index":542,"title":{},"body":{"miscellaneous/functions.html":{}}}],["blob",{"_index":526,"title":{},"body":{"miscellaneous/functions.html":{}}}],["blob.ts",{"_index":467,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bool",{"_index":115,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["browser",{"_index":524,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bucket",{"_index":61,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["buckets",{"_index":19,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["c",{"_index":569,"title":{},"body":{"miscellaneous/functions.html":{}}}],["c']).pipe(orelse('b')).subscribe(console.log",{"_index":566,"title":{},"body":{"miscellaneous/functions.html":{}}}],["call",{"_index":15,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"classes/SubSink.html":{},"miscellaneous/functions.html":{}}}],["calls",{"_index":389,"title":{},"body":{"classes/SubSink.html":{}}}],["case",{"_index":168,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["chain",{"_index":535,"title":{},"body":{"miscellaneous/functions.html":{}}}],["changelog",{"_index":407,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["check",{"_index":209,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["checking",{"_index":552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":245,"title":{"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{}},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"coverage.html":{}}}],["classes",{"_index":361,"title":{},"body":{"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"overview.html":{}}}],["cognizone/elastic",{"_index":102,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["combinelatest",{"_index":152,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["combinelatest(obs).pipe(map(alloptions",{"_index":254,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["compatible",{"_index":528,"title":{},"body":{"miscellaneous/functions.html":{}}}],["completable",{"_index":503,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["completabletoobservable",{"_index":419,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["completabletoobservable(resource",{"_index":501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["completabletopromise",{"_index":422,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["completabletopromise(resource",{"_index":505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complete",{"_index":614,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["complex",{"_index":304,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["consistency",{"_index":176,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["const",{"_index":213,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["constructor",{"_index":362,"title":{},"body":{"classes/SelectOptionsProvidersMerger.html":{}}}],["constructor(private",{"_index":248,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["constructor(providers",{"_index":363,"title":{},"body":{"classes/SelectOptionsProvidersMerger.html":{}}}],["content",{"_index":9,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["convert",{"_index":502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["corersponding",{"_index":299,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["corresponding",{"_index":233,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["counts",{"_index":148,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["coverage",{"_index":414,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":139,"title":{},"body":{"interfaces/ElasticQuery.html":{},"miscellaneous/functions.html":{}}}],["createelasticquery",{"_index":142,"title":{},"body":{"interfaces/ElasticQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["cross",{"_index":527,"title":{},"body":{"miscellaneous/functions.html":{}}}],["curr",{"_index":256,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["czlabel",{"_index":607,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["czlabeltostring",{"_index":427,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["czlabeltostring(label",{"_index":509,"title":{},"body":{"miscellaneous/functions.html":{}}}],["data",{"_index":80,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["date",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["datetodatestring",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["datetodatestring(value",{"_index":511,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dd",{"_index":514,"title":{},"body":{"miscellaneous/functions.html":{}}}],["debouncesync",{"_index":456,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["debouncing",{"_index":517,"title":{},"body":{"miscellaneous/functions.html":{}}}],["debugging",{"_index":536,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaulting",{"_index":563,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defined",{"_index":308,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{}}}],["dependencies",{"_index":479,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deprecated",{"_index":99,"title":{},"body":{"interfaces/ElasticQuery.html":{},"miscellaneous/variables.html":{}}}],["deprectated",{"_index":244,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["desc",{"_index":127,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["describe",{"_index":105,"title":{},"body":{"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["describes",{"_index":626,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"miscellaneous/functions.html":{}}}],["dictionary",{"_index":608,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["digging",{"_index":538,"title":{},"body":{"miscellaneous/functions.html":{}}}],["directly",{"_index":616,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["disabled",{"_index":190,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["display",{"_index":193,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["distinctuntilchanged",{"_index":579,"title":{},"body":{"miscellaneous/functions.html":{}}}],["doc_count",{"_index":67,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["doc_count_error_upper_bound",{"_index":20,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["documentation",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":12,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"classes/SubSink.html":{}}}],["download",{"_index":525,"title":{},"body":{"miscellaneous/functions.html":{}}}],["downloadblob",{"_index":468,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["downloadblob(data",{"_index":521,"title":{},"body":{"miscellaneous/functions.html":{}}}],["each",{"_index":295,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["ease",{"_index":507,"title":{},"body":{"miscellaneous/functions.html":{}}}],["effort",{"_index":175,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["elastic",{"_index":10,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["elasticaggregation",{"_index":1,"title":{"interfaces/ElasticAggregation.html":{}},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"coverage.html":{}}}],["elasticbucket",{"_index":22,"title":{"interfaces/ElasticBucket.html":{}},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"coverage.html":{}}}],["elastichit",{"_index":43,"title":{"interfaces/ElasticHit.html":{}},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"coverage.html":{}}}],["elasticquery",{"_index":97,"title":{"interfaces/ElasticQuery.html":{}},"body":{"interfaces/ElasticQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["elasticresponse",{"_index":70,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["elasticsearchresponse",{"_index":27,"title":{"interfaces/ElasticSearchResponse.html":{}},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["elasticsort",{"_index":123,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["elastsic",{"_index":340,"title":{},"body":{"interfaces/Pagination.html":{}}}],["element",{"_index":322,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["else.ts",{"_index":458,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["empties",{"_index":383,"title":{},"body":{"classes/SubSink.html":{}}}],["empty",{"_index":376,"title":{},"body":{"classes/SubSink.html":{}}}],["en",{"_index":297,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["encompass",{"_index":618,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["end",{"_index":545,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entries.ts",{"_index":473,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["eq",{"_index":40,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["etc",{"_index":173,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["even",{"_index":318,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["everywhere",{"_index":343,"title":{},"body":{"interfaces/Pagination.html":{}}}],["example",{"_index":274,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["exclude",{"_index":561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["execute",{"_index":597,"title":{},"body":{"index.html":{}}}],["export",{"_index":26,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{}}}],["extract",{"_index":90,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["extractonesourcefromelasticresponse",{"_index":434,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractonesourcefromelasticresponse(response",{"_index":92,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["extractsourcesfromelasticresponse",{"_index":435,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extractsourcesfromelasticresponse(response",{"_index":88,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["extractsourcesfromelasticresponse(response)[0",{"_index":93,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["facets",{"_index":314,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["failed",{"_index":35,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["fallback",{"_index":317,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["fallbacklangs",{"_index":326,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["field",{"_index":122,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"changelog.html":{},"coverage.html":{}}}],["filename",{"_index":522,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filter",{"_index":116,"title":{},"body":{"interfaces/ElasticQuery.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["filter(notnil",{"_index":262,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["filtered",{"_index":229,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["filtering",{"_index":557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["first",{"_index":91,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["firstlangavailable",{"_index":332,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["form",{"_index":242,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["format",{"_index":515,"title":{},"body":{"miscellaneous/functions.html":{}}}],["found",{"_index":315,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["fr",{"_index":298,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["from(['a",{"_index":565,"title":{},"body":{"miscellaneous/functions.html":{}}}],["from(this.providers).pipe",{"_index":258,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["function",{"_index":74,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":487,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":408,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generic",{"_index":338,"title":{},"body":{"interfaces/Pagination.html":{},"miscellaneous/typealiases.html":{}}}],["getallproperties",{"_index":471,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getallproperties(obj",{"_index":532,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getallselectoptions",{"_index":447,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getallselectoptions(options",{"_index":275,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["getlangstringvalue",{"_index":329,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getlangstringvalue(langstring",{"_index":540,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getoptions",{"_index":353,"title":{},"body":{"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["getoptions(query",{"_index":230,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["getselectoptionsparams",{"_index":145,"title":{"interfaces/GetSelectOptionsParams.html":{}},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"coverage.html":{}}}],["getting",{"_index":405,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["getvalueoption",{"_index":354,"title":{},"body":{"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["getvalueoption(value",{"_index":234,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["given",{"_index":72,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["goes",{"_index":533,"title":{},"body":{"miscellaneous/functions.html":{}}}],["going",{"_index":576,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gracefull",{"_index":374,"title":{},"body":{"classes/SubSink.html":{}}}],["group",{"_index":269,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["grouped",{"_index":271,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["groupselectoptions",{"_index":449,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["groupselectoptions(options",{"_index":280,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["gte",{"_index":39,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["handling",{"_index":372,"title":{},"body":{"classes/SubSink.html":{}}}],["hasoption",{"_index":261,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["hasoptionfor",{"_index":355,"title":{},"body":{"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["hasoptionfor(value",{"_index":238,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["hasoptions.some(hasoption",{"_index":267,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["having",{"_index":270,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{}}}],["here",{"_index":202,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["historical",{"_index":194,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["hit",{"_index":47,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["hit._source",{"_index":89,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["hits",{"_index":36,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["identifier",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":530,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ignore",{"_index":124,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["implement",{"_index":226,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["implements",{"_index":247,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["import",{"_index":151,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":307,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOptionCounts.html":{}}}],["indexed",{"_index":294,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{}}}],["inside",{"_index":62,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["instead",{"_index":103,"title":{},"body":{"interfaces/ElasticQuery.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{}},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"overview.html":{}}}],["internal",{"_index":384,"title":{},"body":{"classes/SubSink.html":{}}}],["interoperability",{"_index":227,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["interoperable",{"_index":177,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["isselectoption",{"_index":450,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isselectoption(o",{"_index":288,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["isselectoption(option",{"_index":284,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["it's",{"_index":341,"title":{},"body":{"interfaces/Pagination.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["item",{"_index":350,"title":{},"body":{"interfaces/Pagination.html":{}}}],["itself",{"_index":624,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["javascript",{"_index":537,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jscutlery/semver",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":76,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["key",{"_index":45,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["key_as_string",{"_index":66,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["keys",{"_index":302,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/typealiases.html":{}}}],["keyvalue",{"_index":165,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["kind",{"_index":163,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["label",{"_index":184,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["label.tolowercase().includes(lowerquery",{"_index":223,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["label.ts",{"_index":426,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["labels",{"_index":210,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["lang",{"_index":149,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["langstring",{"_index":160,"title":{"interfaces/LangString.html":{}},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["langstringsimple",{"_index":161,"title":{"interfaces/LangStringSimple.html":{}},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["language",{"_index":300,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["languages",{"_index":306,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["lastdynamicgroup",{"_index":282,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["lastdynamicgroup.options.push(option",{"_index":286,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["libraries",{"_index":178,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["library",{"_index":199,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"index.html":{}}}],["limitative",{"_index":109,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["link",{"_index":63,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["linked",{"_index":237,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["list",{"_index":328,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["literal",{"_index":114,"title":{},"body":{"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/SelectOption.html":{},"miscellaneous/typealiases.html":{}}}],["log",{"_index":567,"title":{},"body":{"miscellaneous/functions.html":{}}}],["looking",{"_index":529,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lowerquery",{"_index":214,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["made",{"_index":390,"title":{},"body":{"classes/SubSink.html":{}}}],["main",{"_index":555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["manner",{"_index":375,"title":{},"body":{"classes/SubSink.html":{}}}],["many",{"_index":311,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["manytoarray",{"_index":438,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["manytoarray(x",{"_index":541,"title":{},"body":{"miscellaneous/functions.html":{}}}],["manytoone",{"_index":310,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manytoone(langstring[firstlangavailable",{"_index":334,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["manytoone(langstring[language",{"_index":331,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["manytoone(x",{"_index":547,"title":{},"body":{"miscellaneous/functions.html":{}}}],["map",{"_index":155,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["map(hasoptions",{"_index":266,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["mapelasticsources",{"_index":436,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapelasticsources(response",{"_index":79,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["match",{"_index":119,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["matches",{"_index":211,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":95,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":134,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["max_score",{"_index":41,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["maybe",{"_index":64,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["median",{"_index":138,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["mergemap",{"_index":156,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["mergemap(provider",{"_index":259,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["merges",{"_index":239,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["method",{"_index":397,"title":{},"body":{"classes/SubSink.html":{}}}],["methods",{"_index":352,"title":{},"body":{"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{}}}],["min",{"_index":135,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["minimum_should_match",{"_index":118,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["miscellaneous",{"_index":486,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":129,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["mix",{"_index":345,"title":{},"body":{"interfaces/Pagination.html":{}}}],["mm",{"_index":513,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mode",{"_index":133,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["model",{"_index":589,"title":{},"body":{"index.html":{}}}],["models",{"_index":179,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["modules",{"_index":598,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monotypeoperatorfunction",{"_index":520,"title":{},"body":{"miscellaneous/functions.html":{}}}],["more",{"_index":303,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["mostly",{"_index":174,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["multiple",{"_index":240,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"miscellaneous/functions.html":{}}}],["must_not",{"_index":117,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["mystringarray",{"_index":559,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mysubsink",{"_index":392,"title":{},"body":{"classes/SubSink.html":{}}}],["mysubsink.addinarray(timer(1000).subscribe",{"_index":398,"title":{},"body":{"classes/SubSink.html":{}}}],["naively",{"_index":208,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["name",{"_index":358,"title":{},"body":{"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":201,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["needing",{"_index":192,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["new",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["ngfor",{"_index":205,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["ngxs",{"_index":585,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nil",{"_index":150,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["noted",{"_index":320,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["nothing",{"_index":319,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["notnil",{"_index":162,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["notnil(o",{"_index":551,"title":{},"body":{"miscellaneous/functions.html":{}}}],["now",{"_index":110,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["null",{"_index":42,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["nullish",{"_index":543,"title":{},"body":{"miscellaneous/functions.html":{}}}],["number",{"_index":25,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["numbers",{"_index":60,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["nx",{"_index":591,"title":{},"body":{"index.html":{}}}],["o",{"_index":289,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["obecjt",{"_index":575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["obj",{"_index":539,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":120,"title":{},"body":{"interfaces/ElasticQuery.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["object.entries",{"_index":587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object.keys(langstring).pop",{"_index":333,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["object.ts",{"_index":606,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["object.values(option.label).foreach(labels",{"_index":220,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["obs",{"_index":251,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["observable",{"_index":153,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["one",{"_index":101,"title":{},"body":{"interfaces/ElasticQuery.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["operator",{"_index":516,"title":{},"body":{"miscellaneous/functions.html":{}}}],["operatorfunction",{"_index":570,"title":{},"body":{"miscellaneous/functions.html":{}}}],["option",{"_index":171,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["option.label",{"_index":218,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["option.ts",{"_index":147,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["option.ts:107",{"_index":366,"title":{},"body":{"classes/SelectOptionsProvidersMerger.html":{}}}],["option.ts:120",{"_index":367,"title":{},"body":{"classes/SelectOptionsProvidersMerger.html":{}}}],["option.ts:38",{"_index":351,"title":{},"body":{"interfaces/SelectOptionCounts.html":{}}}],["option.ts:71",{"_index":356,"title":{},"body":{"interfaces/SelectOptionsProvider.html":{}}}],["option.ts:76",{"_index":359,"title":{},"body":{"interfaces/SelectOptionsProvider.html":{}}}],["option.ts:81",{"_index":360,"title":{},"body":{"interfaces/SelectOptionsProvider.html":{}}}],["option.ts:93",{"_index":364,"title":{},"body":{"classes/SelectOptionsProvidersMerger.html":{}}}],["option.ts:99",{"_index":365,"title":{},"body":{"classes/SelectOptionsProvidersMerger.html":{}}}],["option.value",{"_index":207,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["optional",{"_index":18,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":272,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["options.foreach(option",{"_index":277,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["order",{"_index":126,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["ordered",{"_index":327,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["orelse",{"_index":459,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["orelse(value",{"_index":562,"title":{},"body":{"miscellaneous/functions.html":{}}}],["originates",{"_index":339,"title":{},"body":{"interfaces/Pagination.html":{}}}],["overview",{"_index":599,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":478,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":348,"title":{},"body":{"interfaces/Pagination.html":{}}}],["pagiantion",{"_index":344,"title":{},"body":{"interfaces/Pagination.html":{}}}],["pagination",{"_index":336,"title":{"interfaces/Pagination.html":{}},"body":{"interfaces/Pagination.html":{},"coverage.html":{}}}],["param",{"_index":75,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["parameters",{"_index":357,"title":{},"body":{"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":231,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["parts",{"_index":582,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passes",{"_index":564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["peer",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["piped",{"_index":508,"title":{},"body":{"miscellaneous/functions.html":{}}}],["placeholder",{"_index":198,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["pool",{"_index":385,"title":{},"body":{"classes/SubSink.html":{}}}],["preferred",{"_index":325,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["presentational",{"_index":185,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["private",{"_index":399,"title":{},"body":{"classes/SubSink.html":{}}}],["project",{"_index":73,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["project(hit._source",{"_index":84,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["projection",{"_index":78,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":506,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["prop.ts",{"_index":461,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":17,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionGroup.html":{},"miscellaneous/functions.html":{}}}],["properties.ts",{"_index":470,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["property",{"_index":574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prototype",{"_index":534,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider",{"_index":236,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["provider.getoptions(query",{"_index":253,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["provider.getvalueoption(value",{"_index":264,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["provider.hasoptionfor(value",{"_index":265,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["provider.hasoptionfor(value).pipe(map(hasoption",{"_index":260,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["providers",{"_index":249,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["provides",{"_index":225,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["purposes",{"_index":186,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["put",{"_index":200,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["query",{"_index":107,"title":{},"body":{"interfaces/ElasticQuery.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["query.tolowercase",{"_index":215,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["query.ts",{"_index":98,"title":{},"body":{"interfaces/ElasticQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["quite",{"_index":108,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["rdf:langstring",{"_index":292,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["reactive",{"_index":583,"title":{},"body":{"miscellaneous/functions.html":{}}}],["record",{"_index":613,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["relation",{"_index":38,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["represents",{"_index":268,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/typealiases.html":{}}}],["resource",{"_index":504,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["response",{"_index":48,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["response.hits",{"_index":82,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["response.hits.hits.map(hit",{"_index":83,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["response.ts",{"_index":7,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["result",{"_index":94,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":96,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":68,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["returned",{"_index":77,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":235,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["right",{"_index":580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":595,"title":{},"body":{"index.html":{}}}],["running",{"_index":592,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":154,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["rxjs/operators",{"_index":159,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["safe",{"_index":544,"title":{},"body":{"miscellaneous/functions.html":{}}}],["same",{"_index":312,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["search",{"_index":106,"title":{},"body":{"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["see",{"_index":250,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["select",{"_index":170,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["selecting",{"_index":581,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selectoption",{"_index":180,"title":{"interfaces/SelectOption.html":{}},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["selectoptioncounts",{"_index":203,"title":{"interfaces/SelectOptionCounts.html":{}},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"coverage.html":{}}}],["selectoptiongroup",{"_index":232,"title":{"interfaces/SelectOptionGroup.html":{}},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["selectoptionlabel",{"_index":187,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/typealiases.html":{}}}],["selectoptionmatchquery",{"_index":451,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["selectoptionmatchquery(option",{"_index":212,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["selectoptionsprovider",{"_index":228,"title":{"interfaces/SelectOptionsProvider.html":{}},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"coverage.html":{}}}],["selectoptionsprovidersmerger",{"_index":246,"title":{"classes/SelectOptionsProvidersMerger.html":{}},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"coverage.html":{}}}],["selectprop",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["selectprop(key",{"_index":571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selects",{"_index":273,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["sense",{"_index":615,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["service",{"_index":224,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["set",{"_index":182,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{}}}],["setadd(value",{"_index":387,"title":{},"body":{"classes/SubSink.html":{}}}],["shorthand",{"_index":622,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["simple",{"_index":296,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["simply",{"_index":572,"title":{},"body":{"miscellaneous/functions.html":{}}}],["single",{"_index":86,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["sink.ts",{"_index":370,"title":{},"body":{"classes/SubSink.html":{},"coverage.html":{}}}],["sink.ts:16",{"_index":388,"title":{},"body":{"classes/SubSink.html":{}}}],["sink.ts:23",{"_index":379,"title":{},"body":{"classes/SubSink.html":{}}}],["size",{"_index":112,"title":{},"body":{"interfaces/ElasticQuery.html":{},"interfaces/Pagination.html":{}}}],["skipped",{"_index":34,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["sort",{"_index":57,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["sorter",{"_index":610,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"miscellaneous/functions.html":{}}}],["specify",{"_index":623,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../any",{"_index":605,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../completable.ts",{"_index":488,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../cz",{"_index":490,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../date",{"_index":491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../debounce",{"_index":492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../dictionary.ts",{"_index":609,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../download",{"_index":493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../elastic",{"_index":489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../get",{"_index":494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../lang",{"_index":496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../many.ts",{"_index":497,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../nil.ts",{"_index":498,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../or",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../select",{"_index":495,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../sorter.ts",{"_index":611,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../strict",{"_index":500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/models/any",{"_index":612,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/models/completable.ts",{"_index":418,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/models/cz",{"_index":425,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/models/dictionary.ts",{"_index":621,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/models/elastic",{"_index":6,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/models/lang",{"_index":290,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/models/many.ts",{"_index":437,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/models/nil.ts",{"_index":439,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/models/pagination.ts",{"_index":337,"title":{},"body":{"interfaces/Pagination.html":{},"coverage.html":{}}}],["src/lib/models/select",{"_index":146,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/models/sorter.ts",{"_index":625,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/models/sub",{"_index":369,"title":{},"body":{"classes/SubSink.html":{},"coverage.html":{}}}],["src/lib/operators/debounce",{"_index":454,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/operators/or",{"_index":457,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/operators/select",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/utils/date",{"_index":463,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/utils/download",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/utils/get",{"_index":469,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/utils/strict",{"_index":472,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":406,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["state",{"_index":584,"title":{},"body":{"miscellaneous/functions.html":{}}}],["statements",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":196,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["stream",{"_index":558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["strictentries",{"_index":474,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["strictentries(o",{"_index":586,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":46,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["string.ts",{"_index":291,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["string.ts:15",{"_index":335,"title":{},"body":{"interfaces/LangStringSimple.html":{}}}],["string.ts:8",{"_index":309,"title":{},"body":{"interfaces/LangString.html":{}}}],["strongly",{"_index":588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["structure",{"_index":141,"title":{},"body":{"interfaces/ElasticQuery.html":{},"miscellaneous/functions.html":{}}}],["sub.unsubscribe",{"_index":403,"title":{},"body":{"classes/SubSink.html":{}}}],["subscription",{"_index":373,"title":{},"body":{"classes/SubSink.html":{}}}],["subscriptions",{"_index":382,"title":{},"body":{"classes/SubSink.html":{}}}],["subsink",{"_index":368,"title":{"classes/SubSink.html":{}},"body":{"classes/SubSink.html":{},"coverage.html":{}}}],["successful",{"_index":33,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["succession",{"_index":391,"title":{},"body":{"classes/SubSink.html":{}}}],["sum",{"_index":136,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["sum_other_doc_count",{"_index":21,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["sure",{"_index":58,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["switchmap",{"_index":157,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["switchmap(provider",{"_index":263,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["sync.ts",{"_index":455,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["synchronous",{"_index":518,"title":{},"body":{"miscellaneous/functions.html":{}}}],["t",{"_index":52,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["taken",{"_index":323,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["taking",{"_index":549,"title":{},"body":{"miscellaneous/functions.html":{}}}],["terms",{"_index":125,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["test",{"_index":596,"title":{},"body":{"index.html":{}}}],["tests",{"_index":594,"title":{},"body":{"index.html":{}}}],["that's",{"_index":301,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["this.providers.map(provider",{"_index":252,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["this.subscriptions",{"_index":404,"title":{},"body":{"classes/SubSink.html":{}}}],["this.subscriptions.foreach(sub",{"_index":402,"title":{},"body":{"classes/SubSink.html":{}}}],["this.subscriptions.push(value",{"_index":401,"title":{},"body":{"classes/SubSink.html":{}}}],["those",{"_index":313,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["timed_out",{"_index":29,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["timer(1000).subscribe",{"_index":394,"title":{},"body":{"classes/SubSink.html":{}}}],["timer(500).subscribe",{"_index":393,"title":{},"body":{"classes/SubSink.html":{}}}],["toarray",{"_index":158,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["together",{"_index":241,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["took",{"_index":28,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["total",{"_index":32,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["track_total_hits",{"_index":113,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["trackbyfn",{"_index":204,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["trackbyselectoption",{"_index":452,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["trackbyselectoption(index",{"_index":206,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["transformed",{"_index":69,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["trhough",{"_index":577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["triggers",{"_index":523,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trough",{"_index":13,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["true",{"_index":189,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["try",{"_index":316,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["tslib",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":188,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["type",{"_index":23,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":602,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":51,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"miscellaneous/functions.html":{}}}],["typeof",{"_index":217,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["types",{"_index":620,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["u",{"_index":81,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["undefined",{"_index":283,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["unified",{"_index":243,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["union",{"_index":617,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unique",{"_index":183,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["unit",{"_index":593,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":65,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticQuery.html":{},"interfaces/ElasticSearchResponse.html":{}}}],["unmapped_type",{"_index":132,"title":{},"body":{"interfaces/ElasticQuery.html":{}}}],["unsuscribe",{"_index":380,"title":{},"body":{"classes/SubSink.html":{}}}],["up",{"_index":346,"title":{},"body":{"interfaces/Pagination.html":{},"miscellaneous/functions.html":{}}}],["uri",{"_index":305,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["usage",{"_index":556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["use",{"_index":100,"title":{},"body":{"interfaces/ElasticQuery.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/Pagination.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":166,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["useful",{"_index":191,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":169,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["using",{"_index":71,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["usual",{"_index":619,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["usually",{"_index":293,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{}}}],["utility",{"_index":371,"title":{},"body":{"classes/SubSink.html":{}}}],["utils",{"_index":590,"title":{},"body":{"index.html":{}}}],["value",{"_index":37,"title":{},"body":{"interfaces/ElasticAggregation.html":{},"interfaces/ElasticBucket.html":{},"interfaces/ElasticHit.html":{},"interfaces/ElasticSearchResponse.html":{},"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"classes/SubSink.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":195,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{},"miscellaneous/functions.html":{}}}],["variable",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":628,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":386,"title":{},"body":{"classes/SubSink.html":{},"miscellaneous/functions.html":{}}}],["want",{"_index":324,"title":{},"body":{"interfaces/LangString.html":{},"interfaces/LangStringSimple.html":{},"miscellaneous/functions.html":{}}}],["way",{"_index":519,"title":{},"body":{"miscellaneous/functions.html":{}}}],["whatever",{"_index":197,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["whenever",{"_index":167,"title":{},"body":{"interfaces/GetSelectOptionsParams.html":{},"interfaces/SelectOption.html":{},"interfaces/SelectOptionCounts.html":{},"interfaces/SelectOptionGroup.html":{},"interfaces/SelectOptionsProvider.html":{},"classes/SelectOptionsProvidersMerger.html":{}}}],["wrap",{"_index":396,"title":{},"body":{"classes/SubSink.html":{}}}],["x",{"_index":546,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yes",{"_index":531,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yyyy",{"_index":512,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ElasticAggregation.html":{"url":"interfaces/ElasticAggregation.html","title":"interface - ElasticAggregation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElasticAggregation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/elastic-response.ts\n        \n\n\n            \n                Description\n            \n            \n                The content of an elastic aggregation done trough a _search call\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            buckets\n                                        \n                                \n                                \n                                        \n                                            doc_count_error_upper_bound\n                                        \n                                \n                                \n                                        \n                                            sum_other_doc_count\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buckets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buckets:         ElasticBucket[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElasticBucket[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        doc_count_error_upper_bound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        doc_count_error_upper_bound:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sum_other_doc_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sum_other_doc_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ElasticSearchResponse {\n  took: number;\n  timed_out: boolean;\n  _shards: {\n    total: number;\n    successful: number;\n    skipped: number;\n    failed: number;\n  };\n  hits: {\n    total: {\n      value: number;\n      relation: 'gte' | 'eq';\n    };\n    max_score: number | null;\n    hits: ElasticHit[];\n  };\n  aggregations: { [key: string]: ElasticAggregation };\n}\n\n/**\n * A hit in an elastic response, with `_source` being typed as `T`\n */\nexport interface ElasticHit {\n  _index: string;\n  _type: string;\n  _id: string;\n  _score?: number;\n  _source: T;\n  sort?: number[]; // not sure if always numbers\n}\n\n/**\n * The content of an elastic aggregation done trough a _search call\n */\nexport interface ElasticAggregation {\n  doc_count_error_upper_bound: number;\n  sum_other_doc_count: number;\n  buckets?: ElasticBucket[];\n}\n\n/**\n * A bucket that is inside an {@link ElasticAggregation}\n */\nexport interface ElasticBucket {\n  key: string | number; // maybe unknown\n  key_as_string?: string;\n  doc_count: number;\n}\n\n/**\n * Return a transformed {@link ElasticResponse} where all `_source` are transformed using the given `project` function\n * @param response The json returned by a _search elastic call\n * @param project The projection function\n */\nexport function mapElasticSources(response: ElasticSearchResponse, project: (data: T) => U): ElasticSearchResponse {\n  return { ...response, hits: { ...response.hits, hits: response.hits.hits.map(hit => ({ ...hit, _source: project(hit._source) })) } };\n}\n\n/**\n * Aggregate all `_source` in all `hits` of an {@link ElasticResponse} in a single array\n * @param response The json returned by a _search elastic call\n */\nexport function extractSourcesFromElasticResponse(response: ElasticSearchResponse): T[] {\n  return response.hits.hits.map(hit => hit._source);\n}\n\n/**\n * Extract the first `_source` of the first `hits` of an {@link ElasticResponse}\n * @param response The json returned by a _search elastic call\n */\nexport function extractOneSourceFromElasticResponse(response: ElasticSearchResponse): T {\n  return extractSourcesFromElasticResponse(response)[0];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElasticBucket.html":{"url":"interfaces/ElasticBucket.html","title":"interface - ElasticBucket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElasticBucket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/elastic-response.ts\n        \n\n\n            \n                Description\n            \n            \n                A bucket that is inside an ElasticAggregation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            doc_count\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            key_as_string\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doc_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        doc_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key_as_string\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key_as_string:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ElasticSearchResponse {\n  took: number;\n  timed_out: boolean;\n  _shards: {\n    total: number;\n    successful: number;\n    skipped: number;\n    failed: number;\n  };\n  hits: {\n    total: {\n      value: number;\n      relation: 'gte' | 'eq';\n    };\n    max_score: number | null;\n    hits: ElasticHit[];\n  };\n  aggregations: { [key: string]: ElasticAggregation };\n}\n\n/**\n * A hit in an elastic response, with `_source` being typed as `T`\n */\nexport interface ElasticHit {\n  _index: string;\n  _type: string;\n  _id: string;\n  _score?: number;\n  _source: T;\n  sort?: number[]; // not sure if always numbers\n}\n\n/**\n * The content of an elastic aggregation done trough a _search call\n */\nexport interface ElasticAggregation {\n  doc_count_error_upper_bound: number;\n  sum_other_doc_count: number;\n  buckets?: ElasticBucket[];\n}\n\n/**\n * A bucket that is inside an {@link ElasticAggregation}\n */\nexport interface ElasticBucket {\n  key: string | number; // maybe unknown\n  key_as_string?: string;\n  doc_count: number;\n}\n\n/**\n * Return a transformed {@link ElasticResponse} where all `_source` are transformed using the given `project` function\n * @param response The json returned by a _search elastic call\n * @param project The projection function\n */\nexport function mapElasticSources(response: ElasticSearchResponse, project: (data: T) => U): ElasticSearchResponse {\n  return { ...response, hits: { ...response.hits, hits: response.hits.hits.map(hit => ({ ...hit, _source: project(hit._source) })) } };\n}\n\n/**\n * Aggregate all `_source` in all `hits` of an {@link ElasticResponse} in a single array\n * @param response The json returned by a _search elastic call\n */\nexport function extractSourcesFromElasticResponse(response: ElasticSearchResponse): T[] {\n  return response.hits.hits.map(hit => hit._source);\n}\n\n/**\n * Extract the first `_source` of the first `hits` of an {@link ElasticResponse}\n * @param response The json returned by a _search elastic call\n */\nexport function extractOneSourceFromElasticResponse(response: ElasticSearchResponse): T {\n  return extractSourcesFromElasticResponse(response)[0];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElasticHit.html":{"url":"interfaces/ElasticHit.html","title":"interface - ElasticHit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElasticHit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/elastic-response.ts\n        \n\n\n            \n                Description\n            \n            \n                A hit in an elastic response, with _source being typed as T\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            _index\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            _score\n                                        \n                                \n                                \n                                        \n                                            _source\n                                        \n                                \n                                \n                                        \n                                            _type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sort\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _index:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _source:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sort:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ElasticSearchResponse {\n  took: number;\n  timed_out: boolean;\n  _shards: {\n    total: number;\n    successful: number;\n    skipped: number;\n    failed: number;\n  };\n  hits: {\n    total: {\n      value: number;\n      relation: 'gte' | 'eq';\n    };\n    max_score: number | null;\n    hits: ElasticHit[];\n  };\n  aggregations: { [key: string]: ElasticAggregation };\n}\n\n/**\n * A hit in an elastic response, with `_source` being typed as `T`\n */\nexport interface ElasticHit {\n  _index: string;\n  _type: string;\n  _id: string;\n  _score?: number;\n  _source: T;\n  sort?: number[]; // not sure if always numbers\n}\n\n/**\n * The content of an elastic aggregation done trough a _search call\n */\nexport interface ElasticAggregation {\n  doc_count_error_upper_bound: number;\n  sum_other_doc_count: number;\n  buckets?: ElasticBucket[];\n}\n\n/**\n * A bucket that is inside an {@link ElasticAggregation}\n */\nexport interface ElasticBucket {\n  key: string | number; // maybe unknown\n  key_as_string?: string;\n  doc_count: number;\n}\n\n/**\n * Return a transformed {@link ElasticResponse} where all `_source` are transformed using the given `project` function\n * @param response The json returned by a _search elastic call\n * @param project The projection function\n */\nexport function mapElasticSources(response: ElasticSearchResponse, project: (data: T) => U): ElasticSearchResponse {\n  return { ...response, hits: { ...response.hits, hits: response.hits.hits.map(hit => ({ ...hit, _source: project(hit._source) })) } };\n}\n\n/**\n * Aggregate all `_source` in all `hits` of an {@link ElasticResponse} in a single array\n * @param response The json returned by a _search elastic call\n */\nexport function extractSourcesFromElasticResponse(response: ElasticSearchResponse): T[] {\n  return response.hits.hits.map(hit => hit._source);\n}\n\n/**\n * Extract the first `_source` of the first `hits` of an {@link ElasticResponse}\n * @param response The json returned by a _search elastic call\n */\nexport function extractOneSourceFromElasticResponse(response: ElasticSearchResponse): T {\n  return extractSourcesFromElasticResponse(response)[0];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElasticQuery.html":{"url":"interfaces/ElasticQuery.html","title":"interface - ElasticQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElasticQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/elastic-query.ts\n        \n\n            \n                Deprecated\n            \n            \n                use the one from `@cognizone/elastic` instead\n            \n\n            \n                Description\n            \n            \n                This aims to describe an elastic search query, but it can be quite limitative for now\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            aggs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            query\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sort\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            track_total_hits\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aggs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aggs:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        query:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sort:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        track_total_hits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        track_total_hits:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ElasticQuery {\n  from?: number;\n  size?: number;\n  track_total_hits?: boolean;\n  query: {\n    bool?: {\n      filter: unknown[];\n      must: unknown[];\n      must_not: unknown[];\n      should: unknown[];\n      minimum_should_match?: number;\n    };\n    match?: object;\n  };\n  aggs?: { [key: string]: AggregationQuery };\n  sort?: { [field: string]: ElasticSort };\n}\n\n/**\n * @ignore\n */\nexport type AggregationQuery =\n  | {\n      terms: {\n        field: string;\n        size: number;\n      };\n    }\n  | unknown;\n\n/**\n * @ignore\n */\nexport interface ElasticSort {\n  order: 'desc' | 'asc';\n  missing?: '_last' | '_first';\n  unmapped_type?: string;\n  mode?: 'max' | 'min' | 'sum' | 'avg' | 'median';\n}\n\n/**\n * Create a basic structure for an {@link ElasticQuery}\n * @deprecated\n */\nexport function createElasticQuery(): ElasticQuery {\n  return {\n    query: {\n      bool: {\n        filter: [],\n        must: [],\n        must_not: [],\n        should: []\n      }\n    },\n    aggs: {}\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElasticSearchResponse.html":{"url":"interfaces/ElasticSearchResponse.html","title":"interface - ElasticSearchResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElasticSearchResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/elastic-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Describe the response of a search done on Elastic 7+, with _source in hits beging typed with T\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _shards\n                                        \n                                \n                                \n                                        \n                                            aggregations\n                                        \n                                \n                                \n                                        \n                                            hits\n                                        \n                                \n                                \n                                        \n                                            timed_out\n                                        \n                                \n                                \n                                        \n                                            took\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _shards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _shards:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        aggregations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aggregations:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hits:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timed_out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timed_out:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        took\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        took:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ElasticSearchResponse {\n  took: number;\n  timed_out: boolean;\n  _shards: {\n    total: number;\n    successful: number;\n    skipped: number;\n    failed: number;\n  };\n  hits: {\n    total: {\n      value: number;\n      relation: 'gte' | 'eq';\n    };\n    max_score: number | null;\n    hits: ElasticHit[];\n  };\n  aggregations: { [key: string]: ElasticAggregation };\n}\n\n/**\n * A hit in an elastic response, with `_source` being typed as `T`\n */\nexport interface ElasticHit {\n  _index: string;\n  _type: string;\n  _id: string;\n  _score?: number;\n  _source: T;\n  sort?: number[]; // not sure if always numbers\n}\n\n/**\n * The content of an elastic aggregation done trough a _search call\n */\nexport interface ElasticAggregation {\n  doc_count_error_upper_bound: number;\n  sum_other_doc_count: number;\n  buckets?: ElasticBucket[];\n}\n\n/**\n * A bucket that is inside an {@link ElasticAggregation}\n */\nexport interface ElasticBucket {\n  key: string | number; // maybe unknown\n  key_as_string?: string;\n  doc_count: number;\n}\n\n/**\n * Return a transformed {@link ElasticResponse} where all `_source` are transformed using the given `project` function\n * @param response The json returned by a _search elastic call\n * @param project The projection function\n */\nexport function mapElasticSources(response: ElasticSearchResponse, project: (data: T) => U): ElasticSearchResponse {\n  return { ...response, hits: { ...response.hits, hits: response.hits.hits.map(hit => ({ ...hit, _source: project(hit._source) })) } };\n}\n\n/**\n * Aggregate all `_source` in all `hits` of an {@link ElasticResponse} in a single array\n * @param response The json returned by a _search elastic call\n */\nexport function extractSourcesFromElasticResponse(response: ElasticSearchResponse): T[] {\n  return response.hits.hits.map(hit => hit._source);\n}\n\n/**\n * Extract the first `_source` of the first `hits` of an {@link ElasticResponse}\n * @param response The json returned by a _search elastic call\n */\nexport function extractOneSourceFromElasticResponse(response: ElasticSearchResponse): T {\n  return extractSourcesFromElasticResponse(response)[0];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetSelectOptionsParams.html":{"url":"interfaces/GetSelectOptionsParams.html","title":"interface - GetSelectOptionsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetSelectOptionsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/select-option.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            counts\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lang\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        counts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        counts:         Nil\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Nil\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         Nil\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Nil\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { combineLatest, from, Observable } from 'rxjs';\nimport { filter, first, map, mergeMap, switchMap, toArray } from 'rxjs/operators';\n\nimport { LangString, LangStringSimple } from './lang-string';\nimport { Nil, notNil } from './nil';\n\n/**\n * Kind of an augmented KeyValue type to be used whenever we have case where a user has to select an option, being it in a select, an autocomplete, etc.\n * This is mostly there in an effort of consistency, to have interoperable libraries and data models.\n */\nexport interface SelectOption {\n  /**\n   * The value associated to the SelectOption. In a given set, this should be unique.\n   */\n  value: T;\n  /**\n   * The label, used for presentational purposes\n   */\n  label: SelectOptionLabel;\n  /**\n   * Set tu true if this option is disabled, useful when needing to display historical values.\n   */\n  disabled?: boolean;\n  /**\n   * Can store whatever, placeholder for library to put whatever they need here.\n   */\n  data?: {};\n}\n\n/**\n * The label of a {@link SelectOption}\n */\nexport type SelectOptionLabel = string | LangString | LangStringSimple;\n\n/**\n * For consistency, this interface is to be used when needing to use counts for {@link SelectOption}\n */\nexport interface SelectOptionCounts {\n  [value: string]: number;\n}\n\n/**\n * a TrackByFn to be used with an `*ngFor` in case it is used on an array of {@link SelectOption}\n */\nexport function trackBySelectOption(index: number, option: SelectOption): T {\n  return option.value;\n}\n\n/**\n * This will (naively) check that on the labels of the given option matches the query.\n */\nexport function selectOptionMatchQuery(option: SelectOption, query: Nil): boolean {\n  if (!query) return true;\n  const lowerQuery = query.toLowerCase();\n  const allLabels = [];\n  if (typeof option.label === 'string') {\n    allLabels.push(option.label);\n  } else {\n    Object.values(option.label).forEach(labels => allLabels.push(...labels));\n  }\n  return allLabels.some(label => label.toLowerCase().includes(lowerQuery));\n}\n\n/**\n * Any service or other that provides an array of SelectOption should implement this interface for consistency and interoperability.\n */\nexport interface SelectOptionsProvider {\n  /**\n   * Given the query, will return a filtered array of `SelectOption` that all matches.\n   */\n  getOptions(query: Nil, params: GetSelectOptionsParams): Observable | SelectOptionGroup)[]>;\n\n  /**\n   * Given a value, will return the SelectOption corresponding that value.\n   */\n  getValueOption(value: T): Observable>;\n\n  /**\n   * Returns `true` if this provider has a `SelectOption` that is linked to the given value.\n   */\n  hasOptionFor(value: T): Observable;\n}\n\nexport interface GetSelectOptionsParams {\n  counts?: Nil;\n  lang?: Nil;\n}\n\n/**\n * Merges multiple SelectOptionsProvider together to form a unified one.\n * @deprectated\n */\nexport class SelectOptionsProvidersMerger implements SelectOptionsProvider {\n  constructor(private providers: SelectOptionsProvider[]) {}\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  getOptions(query: Nil, params: GetSelectOptionsParams): Observable | SelectOptionGroup)[]> {\n    const obs = this.providers.map(provider => provider.getOptions(query, params));\n    return combineLatest(obs).pipe(map(allOptions => allOptions.reduce((acc, curr) => [...acc, ...curr], [])));\n  }\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  getValueOption(value: T): Observable> {\n    return from(this.providers).pipe(\n      mergeMap(provider => provider.hasOptionFor(value).pipe(map(hasOption => (hasOption ? provider : null)))),\n      filter(notNil),\n      first(),\n      switchMap(provider => provider.getValueOption(value)),\n      first()\n    );\n  }\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  hasOptionFor(value: T): Observable {\n    return from(this.providers).pipe(\n      mergeMap(provider => provider.hasOptionFor(value)),\n      toArray(),\n      map(hasOptions => hasOptions.some(hasOption => hasOption))\n    );\n  }\n}\n\n/**\n * Represents a group SelectOption, might be useful when having grouped options in selects for example\n */\nexport interface SelectOptionGroup {\n  /**\n   * Label of the group\n   */\n  label?: SelectOptionLabel;\n\n  /**\n   * Options that are inside that group\n   */\n  options: SelectOption[];\n}\n\nexport function getAllSelectOptions(options: (SelectOption | SelectOptionGroup)[]): SelectOption[] {\n  const allOptions: SelectOption[] = [];\n  options.forEach(option => {\n    if ('value' in option) {\n      allOptions.push(option);\n    } else {\n      allOptions.push(...option.options);\n    }\n  });\n  return allOptions;\n}\n\nexport function groupSelectOptions(options: (SelectOption | SelectOptionGroup)[]): SelectOptionGroup[] {\n  const allGroups: SelectOptionGroup[] = [];\n  let lastDynamicGroup: SelectOptionGroup | undefined;\n  for (const option of options) {\n    if (isSelectOption(option)) {\n      if (!lastDynamicGroup) {\n        lastDynamicGroup = { options: [] };\n        allGroups.push(lastDynamicGroup);\n      }\n      lastDynamicGroup.options.push(option);\n    } else {\n      lastDynamicGroup = undefined;\n      allGroups.push(option);\n    }\n  }\n  return allGroups;\n}\n\nfunction isSelectOption(o: SelectOption | SelectOptionGroup): o is SelectOption {\n  return 'value' in o;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LangString.html":{"url":"interfaces/LangString.html","title":"interface - LangString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LangString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/lang-string.ts\n        \n\n\n            \n                Description\n            \n            \n                This represents an rdf:langString as usually indexed in our elastic. Each key is a lang (usually simple, like 'en' or 'fr') and its corersponding value is the label in that language. In here, there can be multiple values, that's why it is a string[].\nAlso, keys could be more complex, like uri of the languages\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [lang: string]:    string[]\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/lang-string.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { manyToOne } from './many';\nimport { Nil } from './nil';\n\n/**\n * This represents an rdf:langString as usually indexed in our elastic. Each key is a lang (usually simple, like 'en' or 'fr') and its corersponding value is the label in that language. In here, there can be multiple values, that's why it is a `string[]`.\n * Also, keys could be more complex, like uri of the languages\n */\nexport interface LangString {\n  [lang: string]: string[];\n}\n\n/**\n * Same as {@link LangString} but the value linked to a lang is unique. We usually see those in facets.\n */\nexport interface LangStringSimple {\n  [lang: string]: string;\n}\n\n/**\n * Extract from a {@link LangString} the label in a corresponding `lang`. If not found, it will try extract the label of one of the fallback languages.\n * If even there nothing is found, it will fallback to the first label found.\n * It is to be noted that even if the label is a string[] with multiple values, only the 0th element will be taken.\n * @param langString The lang string from which we want to extract a label\n * @param lang The preferred lang to get the label for\n * @param fallbackLangs ordered list of fallback languages\n */\nexport function getLangStringValue(\n  langString: Nil,\n  lang: string,\n  fallbackLangs: string[] = []\n): string | undefined {\n  if (!langString) return undefined;\n  const allLangs = [lang, ...fallbackLangs];\n\n  for (const language of allLangs) {\n    const label = manyToOne(langString[language]);\n    if (label) return label;\n  }\n  const firstLangAvailable = Object.keys(langString).pop();\n\n  return firstLangAvailable ? manyToOne(langString[firstLangAvailable]) : undefined;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LangStringSimple.html":{"url":"interfaces/LangStringSimple.html","title":"interface - LangStringSimple","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LangStringSimple\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/lang-string.ts\n        \n\n\n            \n                Description\n            \n            \n                Same as LangString but the value linked to a lang is unique. We usually see those in facets.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [lang: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/lang-string.ts:15\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { manyToOne } from './many';\nimport { Nil } from './nil';\n\n/**\n * This represents an rdf:langString as usually indexed in our elastic. Each key is a lang (usually simple, like 'en' or 'fr') and its corersponding value is the label in that language. In here, there can be multiple values, that's why it is a `string[]`.\n * Also, keys could be more complex, like uri of the languages\n */\nexport interface LangString {\n  [lang: string]: string[];\n}\n\n/**\n * Same as {@link LangString} but the value linked to a lang is unique. We usually see those in facets.\n */\nexport interface LangStringSimple {\n  [lang: string]: string;\n}\n\n/**\n * Extract from a {@link LangString} the label in a corresponding `lang`. If not found, it will try extract the label of one of the fallback languages.\n * If even there nothing is found, it will fallback to the first label found.\n * It is to be noted that even if the label is a string[] with multiple values, only the 0th element will be taken.\n * @param langString The lang string from which we want to extract a label\n * @param lang The preferred lang to get the label for\n * @param fallbackLangs ordered list of fallback languages\n */\nexport function getLangStringValue(\n  langString: Nil,\n  lang: string,\n  fallbackLangs: string[] = []\n): string | undefined {\n  if (!langString) return undefined;\n  const allLangs = [lang, ...fallbackLangs];\n\n  for (const language of allLangs) {\n    const label = manyToOne(langString[language]);\n    if (label) return label;\n  }\n  const firstLangAvailable = Object.keys(langString).pop();\n\n  return firstLangAvailable ? manyToOne(langString[firstLangAvailable]) : undefined;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/pagination.ts\n        \n\n\n            \n                Description\n            \n            \n                Generic pagination type, it originates from elastsic query, but it's better to use this interface everywhere we have pagiantion, to no mix it up with other kind of pagination, based on page number for example.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    absolute index of the first item of the page\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Size of the page\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination {\n  /**\n   * absolute index of the first item of the page\n   */\n  from: number;\n  /**\n   * Size of the page\n   */\n  size: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectOption.html":{"url":"interfaces/SelectOption.html","title":"interface - SelectOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/select-option.ts\n        \n\n\n            \n                Description\n            \n            \n                Kind of an augmented KeyValue type to be used whenever we have case where a user has to select an option, being it in a select, an autocomplete, etc.\nThis is mostly there in an effort of consistency, to have interoperable libraries and data models.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can store whatever, placeholder for library to put whatever they need here.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set tu true if this option is disabled, useful when needing to display historical values.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         SelectOptionLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectOptionLabel\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The label, used for presentational purposes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value associated to the SelectOption. In a given set, this should be unique.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { combineLatest, from, Observable } from 'rxjs';\nimport { filter, first, map, mergeMap, switchMap, toArray } from 'rxjs/operators';\n\nimport { LangString, LangStringSimple } from './lang-string';\nimport { Nil, notNil } from './nil';\n\n/**\n * Kind of an augmented KeyValue type to be used whenever we have case where a user has to select an option, being it in a select, an autocomplete, etc.\n * This is mostly there in an effort of consistency, to have interoperable libraries and data models.\n */\nexport interface SelectOption {\n  /**\n   * The value associated to the SelectOption. In a given set, this should be unique.\n   */\n  value: T;\n  /**\n   * The label, used for presentational purposes\n   */\n  label: SelectOptionLabel;\n  /**\n   * Set tu true if this option is disabled, useful when needing to display historical values.\n   */\n  disabled?: boolean;\n  /**\n   * Can store whatever, placeholder for library to put whatever they need here.\n   */\n  data?: {};\n}\n\n/**\n * The label of a {@link SelectOption}\n */\nexport type SelectOptionLabel = string | LangString | LangStringSimple;\n\n/**\n * For consistency, this interface is to be used when needing to use counts for {@link SelectOption}\n */\nexport interface SelectOptionCounts {\n  [value: string]: number;\n}\n\n/**\n * a TrackByFn to be used with an `*ngFor` in case it is used on an array of {@link SelectOption}\n */\nexport function trackBySelectOption(index: number, option: SelectOption): T {\n  return option.value;\n}\n\n/**\n * This will (naively) check that on the labels of the given option matches the query.\n */\nexport function selectOptionMatchQuery(option: SelectOption, query: Nil): boolean {\n  if (!query) return true;\n  const lowerQuery = query.toLowerCase();\n  const allLabels = [];\n  if (typeof option.label === 'string') {\n    allLabels.push(option.label);\n  } else {\n    Object.values(option.label).forEach(labels => allLabels.push(...labels));\n  }\n  return allLabels.some(label => label.toLowerCase().includes(lowerQuery));\n}\n\n/**\n * Any service or other that provides an array of SelectOption should implement this interface for consistency and interoperability.\n */\nexport interface SelectOptionsProvider {\n  /**\n   * Given the query, will return a filtered array of `SelectOption` that all matches.\n   */\n  getOptions(query: Nil, params: GetSelectOptionsParams): Observable | SelectOptionGroup)[]>;\n\n  /**\n   * Given a value, will return the SelectOption corresponding that value.\n   */\n  getValueOption(value: T): Observable>;\n\n  /**\n   * Returns `true` if this provider has a `SelectOption` that is linked to the given value.\n   */\n  hasOptionFor(value: T): Observable;\n}\n\nexport interface GetSelectOptionsParams {\n  counts?: Nil;\n  lang?: Nil;\n}\n\n/**\n * Merges multiple SelectOptionsProvider together to form a unified one.\n * @deprectated\n */\nexport class SelectOptionsProvidersMerger implements SelectOptionsProvider {\n  constructor(private providers: SelectOptionsProvider[]) {}\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  getOptions(query: Nil, params: GetSelectOptionsParams): Observable | SelectOptionGroup)[]> {\n    const obs = this.providers.map(provider => provider.getOptions(query, params));\n    return combineLatest(obs).pipe(map(allOptions => allOptions.reduce((acc, curr) => [...acc, ...curr], [])));\n  }\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  getValueOption(value: T): Observable> {\n    return from(this.providers).pipe(\n      mergeMap(provider => provider.hasOptionFor(value).pipe(map(hasOption => (hasOption ? provider : null)))),\n      filter(notNil),\n      first(),\n      switchMap(provider => provider.getValueOption(value)),\n      first()\n    );\n  }\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  hasOptionFor(value: T): Observable {\n    return from(this.providers).pipe(\n      mergeMap(provider => provider.hasOptionFor(value)),\n      toArray(),\n      map(hasOptions => hasOptions.some(hasOption => hasOption))\n    );\n  }\n}\n\n/**\n * Represents a group SelectOption, might be useful when having grouped options in selects for example\n */\nexport interface SelectOptionGroup {\n  /**\n   * Label of the group\n   */\n  label?: SelectOptionLabel;\n\n  /**\n   * Options that are inside that group\n   */\n  options: SelectOption[];\n}\n\nexport function getAllSelectOptions(options: (SelectOption | SelectOptionGroup)[]): SelectOption[] {\n  const allOptions: SelectOption[] = [];\n  options.forEach(option => {\n    if ('value' in option) {\n      allOptions.push(option);\n    } else {\n      allOptions.push(...option.options);\n    }\n  });\n  return allOptions;\n}\n\nexport function groupSelectOptions(options: (SelectOption | SelectOptionGroup)[]): SelectOptionGroup[] {\n  const allGroups: SelectOptionGroup[] = [];\n  let lastDynamicGroup: SelectOptionGroup | undefined;\n  for (const option of options) {\n    if (isSelectOption(option)) {\n      if (!lastDynamicGroup) {\n        lastDynamicGroup = { options: [] };\n        allGroups.push(lastDynamicGroup);\n      }\n      lastDynamicGroup.options.push(option);\n    } else {\n      lastDynamicGroup = undefined;\n      allGroups.push(option);\n    }\n  }\n  return allGroups;\n}\n\nfunction isSelectOption(o: SelectOption | SelectOptionGroup): o is SelectOption {\n  return 'value' in o;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectOptionCounts.html":{"url":"interfaces/SelectOptionCounts.html","title":"interface - SelectOptionCounts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectOptionCounts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/select-option.ts\n        \n\n\n            \n                Description\n            \n            \n                For consistency, this interface is to be used when needing to use counts for SelectOption\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [value: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/select-option.ts:38\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { combineLatest, from, Observable } from 'rxjs';\nimport { filter, first, map, mergeMap, switchMap, toArray } from 'rxjs/operators';\n\nimport { LangString, LangStringSimple } from './lang-string';\nimport { Nil, notNil } from './nil';\n\n/**\n * Kind of an augmented KeyValue type to be used whenever we have case where a user has to select an option, being it in a select, an autocomplete, etc.\n * This is mostly there in an effort of consistency, to have interoperable libraries and data models.\n */\nexport interface SelectOption {\n  /**\n   * The value associated to the SelectOption. In a given set, this should be unique.\n   */\n  value: T;\n  /**\n   * The label, used for presentational purposes\n   */\n  label: SelectOptionLabel;\n  /**\n   * Set tu true if this option is disabled, useful when needing to display historical values.\n   */\n  disabled?: boolean;\n  /**\n   * Can store whatever, placeholder for library to put whatever they need here.\n   */\n  data?: {};\n}\n\n/**\n * The label of a {@link SelectOption}\n */\nexport type SelectOptionLabel = string | LangString | LangStringSimple;\n\n/**\n * For consistency, this interface is to be used when needing to use counts for {@link SelectOption}\n */\nexport interface SelectOptionCounts {\n  [value: string]: number;\n}\n\n/**\n * a TrackByFn to be used with an `*ngFor` in case it is used on an array of {@link SelectOption}\n */\nexport function trackBySelectOption(index: number, option: SelectOption): T {\n  return option.value;\n}\n\n/**\n * This will (naively) check that on the labels of the given option matches the query.\n */\nexport function selectOptionMatchQuery(option: SelectOption, query: Nil): boolean {\n  if (!query) return true;\n  const lowerQuery = query.toLowerCase();\n  const allLabels = [];\n  if (typeof option.label === 'string') {\n    allLabels.push(option.label);\n  } else {\n    Object.values(option.label).forEach(labels => allLabels.push(...labels));\n  }\n  return allLabels.some(label => label.toLowerCase().includes(lowerQuery));\n}\n\n/**\n * Any service or other that provides an array of SelectOption should implement this interface for consistency and interoperability.\n */\nexport interface SelectOptionsProvider {\n  /**\n   * Given the query, will return a filtered array of `SelectOption` that all matches.\n   */\n  getOptions(query: Nil, params: GetSelectOptionsParams): Observable | SelectOptionGroup)[]>;\n\n  /**\n   * Given a value, will return the SelectOption corresponding that value.\n   */\n  getValueOption(value: T): Observable>;\n\n  /**\n   * Returns `true` if this provider has a `SelectOption` that is linked to the given value.\n   */\n  hasOptionFor(value: T): Observable;\n}\n\nexport interface GetSelectOptionsParams {\n  counts?: Nil;\n  lang?: Nil;\n}\n\n/**\n * Merges multiple SelectOptionsProvider together to form a unified one.\n * @deprectated\n */\nexport class SelectOptionsProvidersMerger implements SelectOptionsProvider {\n  constructor(private providers: SelectOptionsProvider[]) {}\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  getOptions(query: Nil, params: GetSelectOptionsParams): Observable | SelectOptionGroup)[]> {\n    const obs = this.providers.map(provider => provider.getOptions(query, params));\n    return combineLatest(obs).pipe(map(allOptions => allOptions.reduce((acc, curr) => [...acc, ...curr], [])));\n  }\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  getValueOption(value: T): Observable> {\n    return from(this.providers).pipe(\n      mergeMap(provider => provider.hasOptionFor(value).pipe(map(hasOption => (hasOption ? provider : null)))),\n      filter(notNil),\n      first(),\n      switchMap(provider => provider.getValueOption(value)),\n      first()\n    );\n  }\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  hasOptionFor(value: T): Observable {\n    return from(this.providers).pipe(\n      mergeMap(provider => provider.hasOptionFor(value)),\n      toArray(),\n      map(hasOptions => hasOptions.some(hasOption => hasOption))\n    );\n  }\n}\n\n/**\n * Represents a group SelectOption, might be useful when having grouped options in selects for example\n */\nexport interface SelectOptionGroup {\n  /**\n   * Label of the group\n   */\n  label?: SelectOptionLabel;\n\n  /**\n   * Options that are inside that group\n   */\n  options: SelectOption[];\n}\n\nexport function getAllSelectOptions(options: (SelectOption | SelectOptionGroup)[]): SelectOption[] {\n  const allOptions: SelectOption[] = [];\n  options.forEach(option => {\n    if ('value' in option) {\n      allOptions.push(option);\n    } else {\n      allOptions.push(...option.options);\n    }\n  });\n  return allOptions;\n}\n\nexport function groupSelectOptions(options: (SelectOption | SelectOptionGroup)[]): SelectOptionGroup[] {\n  const allGroups: SelectOptionGroup[] = [];\n  let lastDynamicGroup: SelectOptionGroup | undefined;\n  for (const option of options) {\n    if (isSelectOption(option)) {\n      if (!lastDynamicGroup) {\n        lastDynamicGroup = { options: [] };\n        allGroups.push(lastDynamicGroup);\n      }\n      lastDynamicGroup.options.push(option);\n    } else {\n      lastDynamicGroup = undefined;\n      allGroups.push(option);\n    }\n  }\n  return allGroups;\n}\n\nfunction isSelectOption(o: SelectOption | SelectOptionGroup): o is SelectOption {\n  return 'value' in o;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectOptionGroup.html":{"url":"interfaces/SelectOptionGroup.html","title":"interface - SelectOptionGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectOptionGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/select-option.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a group SelectOption, might be useful when having grouped options in selects for example\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         SelectOptionLabel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectOptionLabel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Label of the group\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         SelectOption[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectOption[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Options that are inside that group\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { combineLatest, from, Observable } from 'rxjs';\nimport { filter, first, map, mergeMap, switchMap, toArray } from 'rxjs/operators';\n\nimport { LangString, LangStringSimple } from './lang-string';\nimport { Nil, notNil } from './nil';\n\n/**\n * Kind of an augmented KeyValue type to be used whenever we have case where a user has to select an option, being it in a select, an autocomplete, etc.\n * This is mostly there in an effort of consistency, to have interoperable libraries and data models.\n */\nexport interface SelectOption {\n  /**\n   * The value associated to the SelectOption. In a given set, this should be unique.\n   */\n  value: T;\n  /**\n   * The label, used for presentational purposes\n   */\n  label: SelectOptionLabel;\n  /**\n   * Set tu true if this option is disabled, useful when needing to display historical values.\n   */\n  disabled?: boolean;\n  /**\n   * Can store whatever, placeholder for library to put whatever they need here.\n   */\n  data?: {};\n}\n\n/**\n * The label of a {@link SelectOption}\n */\nexport type SelectOptionLabel = string | LangString | LangStringSimple;\n\n/**\n * For consistency, this interface is to be used when needing to use counts for {@link SelectOption}\n */\nexport interface SelectOptionCounts {\n  [value: string]: number;\n}\n\n/**\n * a TrackByFn to be used with an `*ngFor` in case it is used on an array of {@link SelectOption}\n */\nexport function trackBySelectOption(index: number, option: SelectOption): T {\n  return option.value;\n}\n\n/**\n * This will (naively) check that on the labels of the given option matches the query.\n */\nexport function selectOptionMatchQuery(option: SelectOption, query: Nil): boolean {\n  if (!query) return true;\n  const lowerQuery = query.toLowerCase();\n  const allLabels = [];\n  if (typeof option.label === 'string') {\n    allLabels.push(option.label);\n  } else {\n    Object.values(option.label).forEach(labels => allLabels.push(...labels));\n  }\n  return allLabels.some(label => label.toLowerCase().includes(lowerQuery));\n}\n\n/**\n * Any service or other that provides an array of SelectOption should implement this interface for consistency and interoperability.\n */\nexport interface SelectOptionsProvider {\n  /**\n   * Given the query, will return a filtered array of `SelectOption` that all matches.\n   */\n  getOptions(query: Nil, params: GetSelectOptionsParams): Observable | SelectOptionGroup)[]>;\n\n  /**\n   * Given a value, will return the SelectOption corresponding that value.\n   */\n  getValueOption(value: T): Observable>;\n\n  /**\n   * Returns `true` if this provider has a `SelectOption` that is linked to the given value.\n   */\n  hasOptionFor(value: T): Observable;\n}\n\nexport interface GetSelectOptionsParams {\n  counts?: Nil;\n  lang?: Nil;\n}\n\n/**\n * Merges multiple SelectOptionsProvider together to form a unified one.\n * @deprectated\n */\nexport class SelectOptionsProvidersMerger implements SelectOptionsProvider {\n  constructor(private providers: SelectOptionsProvider[]) {}\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  getOptions(query: Nil, params: GetSelectOptionsParams): Observable | SelectOptionGroup)[]> {\n    const obs = this.providers.map(provider => provider.getOptions(query, params));\n    return combineLatest(obs).pipe(map(allOptions => allOptions.reduce((acc, curr) => [...acc, ...curr], [])));\n  }\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  getValueOption(value: T): Observable> {\n    return from(this.providers).pipe(\n      mergeMap(provider => provider.hasOptionFor(value).pipe(map(hasOption => (hasOption ? provider : null)))),\n      filter(notNil),\n      first(),\n      switchMap(provider => provider.getValueOption(value)),\n      first()\n    );\n  }\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  hasOptionFor(value: T): Observable {\n    return from(this.providers).pipe(\n      mergeMap(provider => provider.hasOptionFor(value)),\n      toArray(),\n      map(hasOptions => hasOptions.some(hasOption => hasOption))\n    );\n  }\n}\n\n/**\n * Represents a group SelectOption, might be useful when having grouped options in selects for example\n */\nexport interface SelectOptionGroup {\n  /**\n   * Label of the group\n   */\n  label?: SelectOptionLabel;\n\n  /**\n   * Options that are inside that group\n   */\n  options: SelectOption[];\n}\n\nexport function getAllSelectOptions(options: (SelectOption | SelectOptionGroup)[]): SelectOption[] {\n  const allOptions: SelectOption[] = [];\n  options.forEach(option => {\n    if ('value' in option) {\n      allOptions.push(option);\n    } else {\n      allOptions.push(...option.options);\n    }\n  });\n  return allOptions;\n}\n\nexport function groupSelectOptions(options: (SelectOption | SelectOptionGroup)[]): SelectOptionGroup[] {\n  const allGroups: SelectOptionGroup[] = [];\n  let lastDynamicGroup: SelectOptionGroup | undefined;\n  for (const option of options) {\n    if (isSelectOption(option)) {\n      if (!lastDynamicGroup) {\n        lastDynamicGroup = { options: [] };\n        allGroups.push(lastDynamicGroup);\n      }\n      lastDynamicGroup.options.push(option);\n    } else {\n      lastDynamicGroup = undefined;\n      allGroups.push(option);\n    }\n  }\n  return allGroups;\n}\n\nfunction isSelectOption(o: SelectOption | SelectOptionGroup): o is SelectOption {\n  return 'value' in o;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectOptionsProvider.html":{"url":"interfaces/SelectOptionsProvider.html","title":"interface - SelectOptionsProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectOptionsProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/select-option.ts\n        \n\n\n            \n                Description\n            \n            \n                Any service or other that provides an array of SelectOption should implement this interface for consistency and interoperability.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getOptions\n                                    \n                                \n                                \n                                    \n                                        getValueOption\n                                    \n                                \n                                \n                                    \n                                        hasOptionFor\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n            \n                \ngetOptions(query: Nil, params: GetSelectOptionsParams)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/select-option.ts:71\n                \n            \n\n\n            \n                \n                    Given the query, will return a filtered array of SelectOption that all matches.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                Nil\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                GetSelectOptionsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValueOption\n                        \n                    \n                \n            \n            \n                \ngetValueOption(value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/select-option.ts:76\n                \n            \n\n\n            \n                \n                    Given a value, will return the SelectOption corresponding that value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasOptionFor\n                        \n                    \n                \n            \n            \n                \nhasOptionFor(value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/select-option.ts:81\n                \n            \n\n\n            \n                \n                    Returns true if this provider has a SelectOption that is linked to the given value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { combineLatest, from, Observable } from 'rxjs';\nimport { filter, first, map, mergeMap, switchMap, toArray } from 'rxjs/operators';\n\nimport { LangString, LangStringSimple } from './lang-string';\nimport { Nil, notNil } from './nil';\n\n/**\n * Kind of an augmented KeyValue type to be used whenever we have case where a user has to select an option, being it in a select, an autocomplete, etc.\n * This is mostly there in an effort of consistency, to have interoperable libraries and data models.\n */\nexport interface SelectOption {\n  /**\n   * The value associated to the SelectOption. In a given set, this should be unique.\n   */\n  value: T;\n  /**\n   * The label, used for presentational purposes\n   */\n  label: SelectOptionLabel;\n  /**\n   * Set tu true if this option is disabled, useful when needing to display historical values.\n   */\n  disabled?: boolean;\n  /**\n   * Can store whatever, placeholder for library to put whatever they need here.\n   */\n  data?: {};\n}\n\n/**\n * The label of a {@link SelectOption}\n */\nexport type SelectOptionLabel = string | LangString | LangStringSimple;\n\n/**\n * For consistency, this interface is to be used when needing to use counts for {@link SelectOption}\n */\nexport interface SelectOptionCounts {\n  [value: string]: number;\n}\n\n/**\n * a TrackByFn to be used with an `*ngFor` in case it is used on an array of {@link SelectOption}\n */\nexport function trackBySelectOption(index: number, option: SelectOption): T {\n  return option.value;\n}\n\n/**\n * This will (naively) check that on the labels of the given option matches the query.\n */\nexport function selectOptionMatchQuery(option: SelectOption, query: Nil): boolean {\n  if (!query) return true;\n  const lowerQuery = query.toLowerCase();\n  const allLabels = [];\n  if (typeof option.label === 'string') {\n    allLabels.push(option.label);\n  } else {\n    Object.values(option.label).forEach(labels => allLabels.push(...labels));\n  }\n  return allLabels.some(label => label.toLowerCase().includes(lowerQuery));\n}\n\n/**\n * Any service or other that provides an array of SelectOption should implement this interface for consistency and interoperability.\n */\nexport interface SelectOptionsProvider {\n  /**\n   * Given the query, will return a filtered array of `SelectOption` that all matches.\n   */\n  getOptions(query: Nil, params: GetSelectOptionsParams): Observable | SelectOptionGroup)[]>;\n\n  /**\n   * Given a value, will return the SelectOption corresponding that value.\n   */\n  getValueOption(value: T): Observable>;\n\n  /**\n   * Returns `true` if this provider has a `SelectOption` that is linked to the given value.\n   */\n  hasOptionFor(value: T): Observable;\n}\n\nexport interface GetSelectOptionsParams {\n  counts?: Nil;\n  lang?: Nil;\n}\n\n/**\n * Merges multiple SelectOptionsProvider together to form a unified one.\n * @deprectated\n */\nexport class SelectOptionsProvidersMerger implements SelectOptionsProvider {\n  constructor(private providers: SelectOptionsProvider[]) {}\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  getOptions(query: Nil, params: GetSelectOptionsParams): Observable | SelectOptionGroup)[]> {\n    const obs = this.providers.map(provider => provider.getOptions(query, params));\n    return combineLatest(obs).pipe(map(allOptions => allOptions.reduce((acc, curr) => [...acc, ...curr], [])));\n  }\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  getValueOption(value: T): Observable> {\n    return from(this.providers).pipe(\n      mergeMap(provider => provider.hasOptionFor(value).pipe(map(hasOption => (hasOption ? provider : null)))),\n      filter(notNil),\n      first(),\n      switchMap(provider => provider.getValueOption(value)),\n      first()\n    );\n  }\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  hasOptionFor(value: T): Observable {\n    return from(this.providers).pipe(\n      mergeMap(provider => provider.hasOptionFor(value)),\n      toArray(),\n      map(hasOptions => hasOptions.some(hasOption => hasOption))\n    );\n  }\n}\n\n/**\n * Represents a group SelectOption, might be useful when having grouped options in selects for example\n */\nexport interface SelectOptionGroup {\n  /**\n   * Label of the group\n   */\n  label?: SelectOptionLabel;\n\n  /**\n   * Options that are inside that group\n   */\n  options: SelectOption[];\n}\n\nexport function getAllSelectOptions(options: (SelectOption | SelectOptionGroup)[]): SelectOption[] {\n  const allOptions: SelectOption[] = [];\n  options.forEach(option => {\n    if ('value' in option) {\n      allOptions.push(option);\n    } else {\n      allOptions.push(...option.options);\n    }\n  });\n  return allOptions;\n}\n\nexport function groupSelectOptions(options: (SelectOption | SelectOptionGroup)[]): SelectOptionGroup[] {\n  const allGroups: SelectOptionGroup[] = [];\n  let lastDynamicGroup: SelectOptionGroup | undefined;\n  for (const option of options) {\n    if (isSelectOption(option)) {\n      if (!lastDynamicGroup) {\n        lastDynamicGroup = { options: [] };\n        allGroups.push(lastDynamicGroup);\n      }\n      lastDynamicGroup.options.push(option);\n    } else {\n      lastDynamicGroup = undefined;\n      allGroups.push(option);\n    }\n  }\n  return allGroups;\n}\n\nfunction isSelectOption(o: SelectOption | SelectOptionGroup): o is SelectOption {\n  return 'value' in o;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectOptionsProvidersMerger.html":{"url":"classes/SelectOptionsProvidersMerger.html","title":"class - SelectOptionsProvidersMerger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectOptionsProvidersMerger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/select-option.ts\n        \n\n\n            \n                Description\n            \n            \n                Merges multiple SelectOptionsProvider together to form a unified one.\n\n            \n\n\n            \n                Implements\n            \n            \n                            SelectOptionsProvider\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOptions\n                            \n                            \n                                getValueOption\n                            \n                            \n                                hasOptionFor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(providers: SelectOptionsProvider[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/models/select-option.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        providers\n                                                  \n                                                        \n                                                                    SelectOptionsProvider[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOptions\n                        \n                    \n                \n            \n            \n                \ngetOptions(query: Nil, params: GetSelectOptionsParams)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/select-option.ts:99\n                \n            \n\n\n            \n                \n                    see SelectOptionsProvider\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                Nil\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                GetSelectOptionsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValueOption\n                        \n                    \n                \n            \n            \n                \ngetValueOption(value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/select-option.ts:107\n                \n            \n\n\n            \n                \n                    see SelectOptionsProvider\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasOptionFor\n                        \n                    \n                \n            \n            \n                \nhasOptionFor(value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/select-option.ts:120\n                \n            \n\n\n            \n                \n                    see SelectOptionsProvider\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { combineLatest, from, Observable } from 'rxjs';\nimport { filter, first, map, mergeMap, switchMap, toArray } from 'rxjs/operators';\n\nimport { LangString, LangStringSimple } from './lang-string';\nimport { Nil, notNil } from './nil';\n\n/**\n * Kind of an augmented KeyValue type to be used whenever we have case where a user has to select an option, being it in a select, an autocomplete, etc.\n * This is mostly there in an effort of consistency, to have interoperable libraries and data models.\n */\nexport interface SelectOption {\n  /**\n   * The value associated to the SelectOption. In a given set, this should be unique.\n   */\n  value: T;\n  /**\n   * The label, used for presentational purposes\n   */\n  label: SelectOptionLabel;\n  /**\n   * Set tu true if this option is disabled, useful when needing to display historical values.\n   */\n  disabled?: boolean;\n  /**\n   * Can store whatever, placeholder for library to put whatever they need here.\n   */\n  data?: {};\n}\n\n/**\n * The label of a {@link SelectOption}\n */\nexport type SelectOptionLabel = string | LangString | LangStringSimple;\n\n/**\n * For consistency, this interface is to be used when needing to use counts for {@link SelectOption}\n */\nexport interface SelectOptionCounts {\n  [value: string]: number;\n}\n\n/**\n * a TrackByFn to be used with an `*ngFor` in case it is used on an array of {@link SelectOption}\n */\nexport function trackBySelectOption(index: number, option: SelectOption): T {\n  return option.value;\n}\n\n/**\n * This will (naively) check that on the labels of the given option matches the query.\n */\nexport function selectOptionMatchQuery(option: SelectOption, query: Nil): boolean {\n  if (!query) return true;\n  const lowerQuery = query.toLowerCase();\n  const allLabels = [];\n  if (typeof option.label === 'string') {\n    allLabels.push(option.label);\n  } else {\n    Object.values(option.label).forEach(labels => allLabels.push(...labels));\n  }\n  return allLabels.some(label => label.toLowerCase().includes(lowerQuery));\n}\n\n/**\n * Any service or other that provides an array of SelectOption should implement this interface for consistency and interoperability.\n */\nexport interface SelectOptionsProvider {\n  /**\n   * Given the query, will return a filtered array of `SelectOption` that all matches.\n   */\n  getOptions(query: Nil, params: GetSelectOptionsParams): Observable | SelectOptionGroup)[]>;\n\n  /**\n   * Given a value, will return the SelectOption corresponding that value.\n   */\n  getValueOption(value: T): Observable>;\n\n  /**\n   * Returns `true` if this provider has a `SelectOption` that is linked to the given value.\n   */\n  hasOptionFor(value: T): Observable;\n}\n\nexport interface GetSelectOptionsParams {\n  counts?: Nil;\n  lang?: Nil;\n}\n\n/**\n * Merges multiple SelectOptionsProvider together to form a unified one.\n * @deprectated\n */\nexport class SelectOptionsProvidersMerger implements SelectOptionsProvider {\n  constructor(private providers: SelectOptionsProvider[]) {}\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  getOptions(query: Nil, params: GetSelectOptionsParams): Observable | SelectOptionGroup)[]> {\n    const obs = this.providers.map(provider => provider.getOptions(query, params));\n    return combineLatest(obs).pipe(map(allOptions => allOptions.reduce((acc, curr) => [...acc, ...curr], [])));\n  }\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  getValueOption(value: T): Observable> {\n    return from(this.providers).pipe(\n      mergeMap(provider => provider.hasOptionFor(value).pipe(map(hasOption => (hasOption ? provider : null)))),\n      filter(notNil),\n      first(),\n      switchMap(provider => provider.getValueOption(value)),\n      first()\n    );\n  }\n\n  /**\n   * see {@link SelectOptionsProvider}\n   */\n  hasOptionFor(value: T): Observable {\n    return from(this.providers).pipe(\n      mergeMap(provider => provider.hasOptionFor(value)),\n      toArray(),\n      map(hasOptions => hasOptions.some(hasOption => hasOption))\n    );\n  }\n}\n\n/**\n * Represents a group SelectOption, might be useful when having grouped options in selects for example\n */\nexport interface SelectOptionGroup {\n  /**\n   * Label of the group\n   */\n  label?: SelectOptionLabel;\n\n  /**\n   * Options that are inside that group\n   */\n  options: SelectOption[];\n}\n\nexport function getAllSelectOptions(options: (SelectOption | SelectOptionGroup)[]): SelectOption[] {\n  const allOptions: SelectOption[] = [];\n  options.forEach(option => {\n    if ('value' in option) {\n      allOptions.push(option);\n    } else {\n      allOptions.push(...option.options);\n    }\n  });\n  return allOptions;\n}\n\nexport function groupSelectOptions(options: (SelectOption | SelectOptionGroup)[]): SelectOptionGroup[] {\n  const allGroups: SelectOptionGroup[] = [];\n  let lastDynamicGroup: SelectOptionGroup | undefined;\n  for (const option of options) {\n    if (isSelectOption(option)) {\n      if (!lastDynamicGroup) {\n        lastDynamicGroup = { options: [] };\n        allGroups.push(lastDynamicGroup);\n      }\n      lastDynamicGroup.options.push(option);\n    } else {\n      lastDynamicGroup = undefined;\n      allGroups.push(option);\n    }\n  }\n  return allGroups;\n}\n\nfunction isSelectOption(o: SelectOption | SelectOptionGroup): o is SelectOption {\n  return 'value' in o;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubSink.html":{"url":"classes/SubSink.html","title":"class - SubSink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubSink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/models/sub-sink.ts\n        \n\n\n            \n                Description\n            \n            \n                Utility class used for handling rxjs subscription in a gracefull manner.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                empty\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    add\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        empty\n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/models/sub-sink.ts:23\n                \n            \n\n\n            \n                \n                    Unsuscribe from all the added subscriptions and empties the internal pool.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        add\n                    \n                \n\n\n                \n                    \n                        setadd(value: Subscription)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/models/sub-sink.ts:16\n                                \n                            \n                    \n                        \n                                Add a subscription to the pool of subscriptions. multiple calls can be made in succession, like\nmySubSink = timer(500).subscribe();\nmySubSink = timer(1000).subscribe();.\nThis was done to avoid having to wrap a subscription in a method call, like\nmySubSink.addInArray(timer(1000).subscribe());\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        Subscription\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Subscription } from 'rxjs';\n\n/**\n * Utility class used for handling rxjs subscription in a gracefull manner.\n */\nexport class SubSink {\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Add a subscription to the pool of subscriptions. multiple calls can be made in succession, like\n   * `mySubSink = timer(500).subscribe();`\n   * `mySubSink = timer(1000).subscribe();`.\n   * This was done to avoid having to wrap a subscription in a method call, like\n   * `mySubSink.addInArray(timer(1000).subscribe());`\n   */\n  set add(value: Subscription) {\n    this.subscriptions.push(value);\n  }\n\n  /**\n   * Unsuscribe from all the added subscriptions and empties the internal pool.\n   */\n  empty(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.subscriptions = [];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nThis file was generated using @jscutlery/semver.\n0.0.1 (2021-07-12)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/models/completable.ts\n            \n            function\n            completableToObservable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/completable.ts\n            \n            function\n            completableToPromise\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/completable.ts\n            \n            variable\n            awaitForCompletable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/cz-label.ts\n            \n            function\n            czLabelToString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/elastic-query.ts\n            \n            interface\n            ElasticQuery\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/lib/models/elastic-query.ts\n            \n            function\n            createElasticQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/elastic-response.ts\n            \n            interface\n            ElasticAggregation\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/lib/models/elastic-response.ts\n            \n            interface\n            ElasticBucket\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/lib/models/elastic-response.ts\n            \n            interface\n            ElasticHit\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/lib/models/elastic-response.ts\n            \n            interface\n            ElasticSearchResponse\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/lib/models/elastic-response.ts\n            \n            function\n            extractOneSourceFromElasticResponse\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/elastic-response.ts\n            \n            function\n            extractSourcesFromElasticResponse\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/elastic-response.ts\n            \n            function\n            mapElasticSources\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/lang-string.ts\n            \n            interface\n            LangString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/lang-string.ts\n            \n            interface\n            LangStringSimple\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/lang-string.ts\n            \n            function\n            getLangStringValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/many.ts\n            \n            function\n            manyToArray\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/many.ts\n            \n            function\n            manyToOne\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/nil.ts\n            \n            function\n            notNil\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/pagination.ts\n            \n            interface\n            Pagination\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/models/select-option.ts\n            \n            class\n            SelectOptionsProvidersMerger\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/lib/models/select-option.ts\n            \n            interface\n            GetSelectOptionsParams\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/models/select-option.ts\n            \n            interface\n            SelectOption\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/lib/models/select-option.ts\n            \n            interface\n            SelectOptionCounts\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/select-option.ts\n            \n            interface\n            SelectOptionGroup\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/models/select-option.ts\n            \n            interface\n            SelectOptionsProvider\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/lib/models/select-option.ts\n            \n            function\n            getAllSelectOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/models/select-option.ts\n            \n            function\n            groupSelectOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/models/select-option.ts\n            \n            function\n            isSelectOption\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/models/select-option.ts\n            \n            function\n            selectOptionMatchQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/select-option.ts\n            \n            function\n            trackBySelectOption\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/models/sub-sink.ts\n            \n            class\n            SubSink\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/operators/debounce-sync.ts\n            \n            function\n            debounceSync\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/operators/or-else.ts\n            \n            function\n            orElse\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/operators/select-prop.ts\n            \n            function\n            selectProp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/utils/date-to-date-string.ts\n            \n            function\n            dateToDateString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/utils/download-blob.ts\n            \n            function\n            downloadBlob\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/utils/get-all-properties.ts\n            \n            function\n            getAllProperties\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/lib/utils/strict-entries.ts\n            \n            function\n            strictEntries\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            rxjs : ^6.5.0\n        \n            typescript : >=3.7.0 \n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            completableToObservable   (src/.../completable.ts)\n                        \n                        \n                            completableToPromise   (src/.../completable.ts)\n                        \n                        \n                            createElasticQuery   (src/.../elastic-query.ts)\n                        \n                        \n                            czLabelToString   (src/.../cz-label.ts)\n                        \n                        \n                            dateToDateString   (src/.../date-to-date-string.ts)\n                        \n                        \n                            debounceSync   (src/.../debounce-sync.ts)\n                        \n                        \n                            downloadBlob   (src/.../download-blob.ts)\n                        \n                        \n                            extractOneSourceFromElasticResponse   (src/.../elastic-response.ts)\n                        \n                        \n                            extractSourcesFromElasticResponse   (src/.../elastic-response.ts)\n                        \n                        \n                            getAllProperties   (src/.../get-all-properties.ts)\n                        \n                        \n                            getAllSelectOptions   (src/.../select-option.ts)\n                        \n                        \n                            getLangStringValue   (src/.../lang-string.ts)\n                        \n                        \n                            groupSelectOptions   (src/.../select-option.ts)\n                        \n                        \n                            isSelectOption   (src/.../select-option.ts)\n                        \n                        \n                            manyToArray   (src/.../many.ts)\n                        \n                        \n                            manyToOne   (src/.../many.ts)\n                        \n                        \n                            mapElasticSources   (src/.../elastic-response.ts)\n                        \n                        \n                            notNil   (src/.../nil.ts)\n                        \n                        \n                            orElse   (src/.../or-else.ts)\n                        \n                        \n                            selectOptionMatchQuery   (src/.../select-option.ts)\n                        \n                        \n                            selectProp   (src/.../select-prop.ts)\n                        \n                        \n                            strictEntries   (src/.../strict-entries.ts)\n                        \n                        \n                            trackBySelectOption   (src/.../select-option.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/completable.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        completableToObservable\n                        \n                    \n                \n            \n            \n                \ncompletableToObservable(resource)\n                \n            \n\n\n\n\n            \n                \n                    Convert a Completable to an Observable\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    resource\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Completable to be transformed into an Observable.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        resource as an Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        completableToPromise\n                        \n                    \n                \n            \n            \n                \ncompletableToPromise(resource)\n                \n            \n\n\n\n\n            \n                \n                    Convert a Completable to a Promise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    resource\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Completable to be transformed into a Promise. For ease of use, if it is an Observable, it is piped with first()\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        resource as a Promise\n\n                    \n                \n            \n        \n    \n    src/lib/models/elastic-query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createElasticQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                \n            \n            \n                \ncreateElasticQuery()\n                \n            \n\n\n\n\n            \n                \n                    Create a basic structure for an ElasticQuery\n\n\n                    \n                        Returns :         ElasticQuery\n\n                    \n                \n            \n        \n    \n    src/lib/models/cz-label.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        czLabelToString\n                        \n                    \n                \n            \n            \n                \nczLabelToString(label, lang, fallbackLangs)\n                \n            \n\n\n\n\n            \n                \n                    same as getLangStringValue but also return label as-is if it's already a string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lang\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fallbackLangs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/utils/date-to-date-string.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dateToDateString\n                        \n                    \n                \n            \n            \n                \ndateToDateString(value)\n                \n            \n\n\n\n\n            \n                \n                    Returns the given Date as a string in the YYYY-MM-dd format\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/operators/debounce-sync.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        debounceSync\n                        \n                    \n                \n            \n            \n                \ndebounceSync()\n                \n            \n\n\n\n\n            \n                \n                    rxjs operator to be used for debouncing the source in a synchronous way\n\n\n                    \n                        Returns :     MonoTypeOperatorFunction\n\n                    \n                \n            \n        \n    \n    src/lib/utils/download-blob.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        downloadBlob\n                        \n                    \n                \n            \n            \n                \ndownloadBlob(data, fileName?)\n                \n            \n\n\n\n\n            \n                \n                    Triggers a browser download of the given Blob, and should be cross-browser compatible (looking at you IE).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fileName\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/models/elastic-response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        extractOneSourceFromElasticResponse\n                        \n                    \n                \n            \n            \n                \nextractOneSourceFromElasticResponse(response)\n                \n            \n\n\n\n\n            \n                \n                    Extract the first _source of the first hits of an ElasticResponse\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The json returned by a _search elastic call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractSourcesFromElasticResponse\n                        \n                    \n                \n            \n            \n                \nextractSourcesFromElasticResponse(response)\n                \n            \n\n\n\n\n            \n                \n                    Aggregate all _source in all hits of an ElasticResponse in a single array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The json returned by a _search elastic call\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapElasticSources\n                        \n                    \n                \n            \n            \n                \nmapElasticSources(response, project)\n                \n            \n\n\n\n\n            \n                \n                    Return a transformed ElasticResponse where all _source are transformed using the given project function\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    response\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The json returned by a _search elastic call\n\n                                    \n                                \n                                \n                                    project\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The projection function\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ElasticSearchResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/utils/get-all-properties.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAllProperties\n                        \n                    \n                \n            \n            \n                \ngetAllProperties(obj)\n                \n            \n\n\n\n\n            \n                \n                    get all properties of the given object, and goes of the prototype chain. This is mostly useful for debugging purposes and javascript digging.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/models/select-option.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAllSelectOptions\n                        \n                    \n                \n            \n            \n                \ngetAllSelectOptions(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SelectOption[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupSelectOptions\n                        \n                    \n                \n            \n            \n                \ngroupSelectOptions(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SelectOptionGroup[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSelectOption\n                        \n                    \n                \n            \n            \n                \nisSelectOption(o)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SelectOption\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectOptionMatchQuery\n                        \n                    \n                \n            \n            \n                \nselectOptionMatchQuery(option, query)\n                \n            \n\n\n\n\n            \n                \n                    This will (naively) check that on the labels of the given option matches the query.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackBySelectOption\n                        \n                    \n                \n            \n            \n                \ntrackBySelectOption(index, option)\n                \n            \n\n\n\n\n            \n                \n                    a TrackByFn to be used with an *ngFor in case it is used on an array of SelectOption\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    option\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/models/lang-string.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLangStringValue\n                        \n                    \n                \n            \n            \n                \ngetLangStringValue(langString, lang, fallbackLangs)\n                \n            \n\n\n\n\n            \n                \n                    Extract from a LangString the label in a corresponding lang. If not found, it will try extract the label of one of the fallback languages.\nIf even there nothing is found, it will fallback to the first label found.\nIt is to be noted that even if the label is a string[] with multiple values, only the 0th element will be taken.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    langString\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The lang string from which we want to extract a label\n\n                                    \n                                \n                                \n                                    lang\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The preferred lang to get the label for\n\n                                    \n                                \n                                \n                                    fallbackLangs\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ordered list of fallback languages\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/models/many.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        manyToArray\n                        \n                    \n                \n            \n            \n                \nmanyToArray(x)\n                \n            \n\n\n\n\n            \n                \n                    Convert a Many to an array. Beware that it is nullish-safe, so you could end up with [undefined].\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        manyToOne\n                        \n                    \n                \n            \n            \n                \nmanyToOne(x)\n                \n            \n\n\n\n\n            \n                \n                    Convert a Many to its base type, taking the 0th element of the array if applicable.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/models/nil.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        notNil\n                        \n                    \n                \n            \n            \n                \nnotNil(o)\n                \n            \n\n\n\n\n            \n                \n                    Checking that the argument is not Nil, so basically o != null. Its main usage is to be used in array filtering or rxjs stream filtering. For example\nconst myStringArray = ['a', undefined, null, 'b'].filter(notNil);\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Exclude\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/operators/or-else.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        orElse\n                        \n                    \n                \n            \n            \n                \norElse(value)\n                \n            \n\n\n\n\n            \n                \n                    rxjs operator to be used for defaulting to a given value if the stream passes a nullish value. For example:\nfrom(['a', undefined, 'c']).pipe(orElse('b')).subscribe(console.log) will log 'a' 'b' 'c'.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/operators/select-prop.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectProp\n                        \n                    \n                \n            \n            \n                \nselectProp(key)\n                \n            \n\n\n\n\n            \n                \n                    Simply take the key property of the obecjt going trhough the stream, and applyting a distinctUntilChanged right after.\nThis is mostly used for selecting parts of a reactive state. (Like we mostly do with ngxs)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/lib/utils/strict-entries.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        strictEntries\n                        \n                    \n                \n            \n            \n                \nstrictEntries(o)\n                \n            \n\n\n\n\n            \n                \n                    Same as Object.entries, but strongly typed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nmodel-utils\nThis library was generated with Nx.\nRunning unit tests\nRun nx test model-utils to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnyObject   (src/.../any-object.ts)\n                        \n                        \n                            Completable   (src/.../completable.ts)\n                        \n                        \n                            CzLabel   (src/.../cz-label.ts)\n                        \n                        \n                            Dictionary   (src/.../dictionary.ts)\n                        \n                        \n                            Many   (src/.../many.ts)\n                        \n                        \n                            Nil   (src/.../nil.ts)\n                        \n                        \n                            SelectOptionLabel   (src/.../select-option.ts)\n                        \n                        \n                            Sorter   (src/.../sorter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/any-object.ts\n    \n    \n        \n            \n                \n                    \n                    AnyObject\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    src/lib/models/completable.ts\n    \n    \n        \n            \n                \n                    \n                    Completable\n                \n            \n            \n                \n                    The Completable type represents a resource that should \"complete\" in the\nObservable sense. A Completable is either directly the generic type given, a Promise that returns that type or an\nObservable that does the same.\n\n                \n            \n            \n                \n                        T | Promise | Observable\n\n                \n            \n        \n    \n    src/lib/models/cz-label.ts\n    \n    \n        \n            \n                \n                    \n                    CzLabel\n                \n            \n            \n                \n                    Union type that encompass all the usual types we use for labels\n\n                \n            \n            \n                \n                        string | LangString | LangStringSimple\n\n                \n            \n        \n    \n    src/lib/models/dictionary.ts\n    \n    \n        \n            \n                \n                    \n                    Dictionary\n                \n            \n            \n                \n                    A shorthand for indexed object with string as keys\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/lib/models/many.ts\n    \n    \n        \n            \n                \n                    \n                    Many\n                \n            \n            \n                \n                    A shorthand to specify if it's either the given type or an array of it\n\n                \n            \n            \n                \n                        T | T[]\n\n                \n            \n        \n    \n    src/lib/models/nil.ts\n    \n    \n        \n            \n                \n                    \n                    Nil\n                \n            \n            \n                \n                    Shorthand type for type being either itself, null or undefined\n\n                \n            \n            \n                \n                        T | undefined | null\n\n                \n            \n        \n    \n    src/lib/models/select-option.ts\n    \n    \n        \n            \n                \n                    \n                    SelectOptionLabel\n                \n            \n            \n                \n                    The label of a SelectOption\n\n                \n            \n            \n                \n                        string | LangString | LangStringSimple\n\n                \n            \n        \n    \n    src/lib/models/sorter.ts\n    \n    \n        \n            \n                \n                    \n                    Sorter\n                \n            \n            \n                \n                    Describes a function to be used as argument for Array::sort\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            awaitForCompletable   (src/.../completable.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/completable.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        awaitForCompletable\n                        \n                    \n                \n            \n            \n                \n                    use `completableToPromise` instead\n                \n            \n                \n                    \n                        Default value : completableToPromise\n                    \n                \n\n            \n                \n                    This is deprecated, use completableToPromise instead\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
